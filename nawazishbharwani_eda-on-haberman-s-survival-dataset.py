import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
df=pd.read_csv('../input/habermans-survival-data-set/haberman.csv',names=['Age','Operated_year','Nodes_Detected','Survival_Status'])
df.head()
df.shape
df.columns
df.info()
df.describe()
df['Survival_Status'].value_counts()
No_of_Deaths=df[df['Survival_Status']==df['Survival_Status'].max()]
Total_Cases=df['Survival_Status']
Survived_rate=(len(No_of_Deaths)/len(Total_Cases))*100
print(Survived_rate)
sns.set_style('whitegrid')
sns.pairplot(df,hue='Survival_Status')
#Spliting data in Patients Survived and that did Not Survived.
Patient_Survived=df[df['Survival_Status']==1]
Patient_Not_Survived=df[df['Survival_Status']==2]
print("SURVIVED:")
print("The mean Age of Survived Patients is : {}".format(np.mean(Patient_Survived['Age'])))
print("The mean No. of Nodes of Survived Patients is : {}".format(np.mean(Patient_Survived['Nodes_Detected'])))
print("DEAD:")
print("The mean Age of Dead Patients is : {}".format(np.mean(Patient_Not_Survived['Age'])))
print("The mean No. of Nodes of Dead Patients is : {}".format(np.mean(Patient_Not_Survived['Nodes_Detected'])))
print("SURVIVED:")
print("The Median Age of Survived Patients is : {}".format(np.median(Patient_Survived['Age'])))
print("The Median of Nodes Detected of Survived Patients is : {}".format(np.median(Patient_Survived['Nodes_Detected'])))
print("DEAD:")
print("The Median Age of Dead Patients is : {}".format(np.median(Patient_Not_Survived['Age'])))
print("The Median of Nodes Detected of Dead Patients is : {}".format(np.median(Patient_Not_Survived['Nodes_Detected'])))
print("SURVIVED:")
print("The Quantile AGE of Survived Patients are: ",np.percentile(Patient_Survived["Age"],np.arange(0,100,25)))
print("The Quantile of Nodes Detected of Survived Patients are: ",np.percentile(Patient_Survived["Nodes_Detected"],np.arange(0,100,25)))
print("DEAD:")
print("The Quantile AGE of Dead Patients are: ",np.percentile(Patient_Not_Survived["Age"],np.arange(0,100,25)))
print("The Quantile of Nodes Detected of Dead Patients are: ",np.percentile(Patient_Not_Survived["Nodes_Detected"],np.arange(0,100,25)))
print("SURVIVED:")
print("The Standard Deciation Age of Survived Patients is : {}".format(np.std(Patient_Survived['Age'])))
print("The Standard Deciation No. of Nodes of Survived Patients is : {}".format(np.std(Patient_Survived['Nodes_Detected'])))
print("DEAD:")
print("The Standard Deciation Age of Dead Patients is : {}".format(np.std(Patient_Not_Survived['Age'])))
print("The Standard Deciation No. of Nodes of Dead Patients is : {}".format(np.std(Patient_Not_Survived['Nodes_Detected'])))
Age_hist=sns.FacetGrid(df,hue='Survival_Status',height=7).map(sns.distplot,'Age').add_legend()
Age_hist.set(xlabel='Age of Patient',ylabel='Density',title='Histogram of Age of Patient')
Age_hist=sns.FacetGrid(df,hue='Survival_Status',height=7).map(sns.distplot,'Operated_year').add_legend()
Age_hist.set(xlabel='Year of Operation ',ylabel='Density',title='Histogram of Year Operated')
Age_hist=sns.FacetGrid(df,hue='Survival_Status',height=7).map(sns.distplot,'Nodes_Detected').add_legend()
Age_hist.set(xlabel='No. of Lymph Nodes Detected ',ylabel='Density',title='Histogram of Lymph Nodes Detected')
Label=(["PDF of Survived","CDF of Survived","PDF of not Survived","CDF of not Survived"])
counts, bin_edges=np.histogram(Patient_Survived['Age'],bins=10,density=True)
pdf=counts/sum(counts)
print("PDF is : ",pdf)
print("Bin Edges are : ",bin_edges)
cdf=np.cumsum(pdf)
plt.plot(bin_edges[1:],pdf)
plt.plot(bin_edges[1:],cdf)

counts, bin_edges=np.histogram(Patient_Not_Survived['Age'],bins=10,density=True)
pdf=counts/sum(counts)
print("PDF is : ",pdf)
print("Bin Edges are : ",bin_edges)
cdf=np.cumsum(pdf)
plt.plot(bin_edges[1:],pdf)
plt.plot(bin_edges[1:],cdf)
plt.legend('Survival_Status')
plt.legend(Label)
plt.xlabel('Age of Patient ')
plt.title('PDF and CDF of Patients based on  AGE ')
Label=(["PDF of Survived","CDF of Survived","PDF of not Survived","CDF of not Survived"])
counts, bin_edges=np.histogram(Patient_Survived['Operated_year'],bins=10,density=True)
pdf=counts/sum(counts)
print("PDF is : ",pdf)
print("Bin Edges are : ",bin_edges)
cdf=np.cumsum(pdf)
plt.plot(bin_edges[1:],pdf)
plt.plot(bin_edges[1:],cdf)

counts, bin_edges=np.histogram(Patient_Not_Survived['Operated_year'],bins=10,density=True)
pdf=counts/sum(counts)
print("PDF is : ",pdf)
print("Bin Edges are : ",bin_edges)
cdf=np.cumsum(pdf)
plt.plot(bin_edges[1:],pdf)
plt.plot(bin_edges[1:],cdf)
plt.legend('Survival_Status')
plt.legend(Label)
plt.xlabel('Year of Patient ')
plt.title('PDF and CDF of Patients based on year of Operation')
Label=(["PDF of Survived","CDF of Survived","PDF of not Survived","CDF of not Survived"])
counts, bin_edges=np.histogram(Patient_Survived['Nodes_Detected'],bins=10,density=True)
pdf=counts/sum(counts)
print("PDF is : ",pdf)
print("Bin Edges are : ",bin_edges)
cdf=np.cumsum(pdf)
plt.plot(bin_edges[1:],pdf)
plt.plot(bin_edges[1:],cdf)

counts, bin_edges=np.histogram(Patient_Not_Survived['Nodes_Detected'],bins=10,density=True)
pdf=counts/sum(counts)
print("PDF is : ",pdf)
print("Bin Edges are : ",bin_edges)
cdf=np.cumsum(pdf)
plt.plot(bin_edges[1:],pdf)
plt.plot(bin_edges[1:],cdf)
plt.legend('Survival_Status')
plt.legend(Label)
plt.xlabel('No. of Nodes Detected')
plt.title('PDF and CDF of Patients based on year of No. of Nodes Detected')
sns.boxplot(x='Survival_Status',y='Age',data=df)
plt.title('Box Plot of Age of Patients')
sns.boxplot(x='Survival_Status',y='Nodes_Detected',data=df)
plt.title("Box Plot for No. of Nodes Detecteed ")
sns.boxplot(x='Survival_Status',y='Operated_year',data=df)
plt.title("Box Plot for Year of Operation")
sns.violinplot(x = "Survival_Status", y = "Age", hue = "Survival_Status", data = df)
plt.title("Violin plot for Age ")
plt.show()
sns.violinplot(x = "Survival_Status", y = "Operated_year", hue = "Survival_Status", data = df)
plt.title("Violin plot for Year of Operation ")
plt.show()
sns.violinplot(x = "Survival_Status", y = "Nodes_Detected", hue = "Survival_Status", data = df)
plt.title("Violin plot for NO. Of Nodes Detected ")
plt.show()
sns.FacetGrid(data=df,size=10,hue='Survival_Status').map(plt.scatter,'Survival_Status','Age').add_legend()
sns.jointplot(y='Nodes_Detected',x='Survival_Status',data=df,kind='kde')
