import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns 
sns.set(style="darkgrid")
import cufflinks as cf

import plotly.offline as py 
import plotly.figure_factory as ff 
import plotly.graph_objs as go 

from plotly import tools 
from plotly.offline import download_plotlyjs, init_notebook_mode, iplot, plot 

py.init_notebook_mode(connected= True)
cf.go_offline()

import warnings
warnings.filterwarnings('ignore')
df= pd.read_csv("../input/BlackFriday.csv")
df.head()

df.info()
df.describe()

male = df[df['Gender'] == 'M']
female = df[df['Gender'] == 'F']

male_pur = male.groupby('Age')["Purchase"].mean().to_frame()
female_pur = female.groupby('Age')["Purchase"].mean().to_frame()

trace0 = go.Scatter(
    x = male_pur.index,
    y = male_pur['Purchase'].round(-2),
    name = 'male',
    line = dict(
        color = 'lime',
        width = 2,
        dash='dash')
)

trace1 = go.Scatter(
      x = female_pur.index,
    y = female_pur['Purchase'].round(-2),
    name = 'female',
    line = dict(
        color = 'maroon',
        width = 2,
        dash = 'dash')
    )


data = [trace0, trace1]
layout = dict(title = 'The Average Purchases of Men & Women by Age',
              xaxis = dict(title = 'Age'),
              yaxis = dict(title = 'Average Purchase ($)')
             )

fig = dict(data=data, layout=layout)
fig['layout']['xaxis'].update(dict(title = 'Age', tickfont = dict(size = 12)))
py.iplot(fig)

male_mar = df[(df['Gender'] == 'M') & (df["Marital_Status"] ==0)]
male_mar_non = df[(df['Gender'] == 'M') & (df["Marital_Status"] == 1)]


female_mar = df[(df['Gender'] == 'F') & (df["Marital_Status"] ==0)]
female_mar_non = df[(df['Gender'] == 'F') & (df["Marital_Status"] ==1)]


male_mar = male_mar.groupby("Age")["Purchase"].mean().to_frame()
male_mar_non = male_mar_non.groupby("Age")["Purchase"].mean().to_frame()

female_mar = female_mar.groupby("Age")["Purchase"].mean().to_frame()
female_mar_non =female_mar_non.groupby("Age")["Purchase"].mean().to_frame()

trace0 = go.Scatter(
    x = male_mar.index,
    y = male_mar['Purchase'].round(-2),
    name = 'Married Male',
    line = dict(
        color = 'blue',
        width = 2,
        dash='longdash'))


trace1 = go.Scatter(
    x = male_mar_non.index,
    y = male_mar_non['Purchase'].round(-2),
    name = 'Non-Married Male',
    line = dict(
        color = 'maroon',
        width = 2,
        dash='longdash'))




trace2 = go.Scatter(
      x = female_mar.index,
    y = female_mar['Purchase'].round(-2),
    name = 'Married Female',
    line = dict(
        color = 'pink',
        width = 2,
        dash = 'dashdot'))

trace3 = go.Scatter(
      x = female_mar_non.index,
    y = female_mar_non['Purchase'].round(-2),
    name = 'Non-Married Female',
    line = dict(
        color = 'lime',
        width = 2,
        dash = 'dashdot'))



data = [trace0, trace1, trace2, trace3]
layout = dict(title = 'Avergae Purchases of Men & Women by Marital Status',
              xaxis = dict(title = 'Age'),
              yaxis = dict(title = 'Average Purchase ($)')
             )

fig = dict(data=data, layout=layout)
fig['layout']['xaxis'].update(dict(title = 'Age', tickfont = dict(size = 12)))
py.iplot(fig)

occ=[]
for i in df["Occupation"]:
    if i not in occ:
        occ.append(i)

occ0 = df[df['Occupation'] == 0]
occ1 = df[df['Occupation'] == 1]
occ2= df[df['Occupation'] == 2]
occ3= df[df['Occupation'] == 3]
occ4= df[df['Occupation'] == 4]
occ5= df[df['Occupation'] == 5]
occ6= df[df['Occupation'] == 6]
occ7= df[df['Occupation'] == 7]
occ8= df[df['Occupation'] == 8]
occ9= df[df['Occupation'] == 9]
occ10= df[df['Occupation'] == 10]


occ_0 = occ0.groupby('Age')["Purchase"].mean().to_frame()
occ_1 = occ1.groupby('Age')["Purchase"].mean().to_frame()
occ_2 = occ2.groupby('Age')["Purchase"].mean().to_frame()
occ_3 = occ3.groupby('Age')["Purchase"].mean().to_frame()
occ_4 = occ4.groupby('Age')["Purchase"].mean().to_frame()
occ_5 = occ5.groupby('Age')["Purchase"].mean().to_frame()
occ_6 = occ6.groupby('Age')["Purchase"].mean().to_frame()
occ_7 = occ7.groupby('Age')["Purchase"].mean().to_frame()
occ_8 = occ8.groupby('Age')["Purchase"].mean().to_frame()
occ_9 = occ9.groupby('Age')["Purchase"].mean().to_frame()
occ_10 = occ10.groupby('Age')["Purchase"].mean().to_frame()

trace0 = go.Scatter(
    x = occ_0.index,
    y = occ_0['Purchase'].round(-2),
    name = '0',
    line = dict(
        color = 'olive',
        width = 2,
        dash='dot'))

trace1 = go.Scatter(
      x = occ_1.index,
    y = occ_1['Purchase'].round(-2),
    name = '1',
    line = dict(
        color = 'linen',
        width = 2,
        dash = 'dashdot'))

trace2 = go.Scatter(
      x = occ_2.index,
    y = occ_2['Purchase'].round(-2),
    name = '2',
    line = dict(
        color = 'brown',
        width = 2,
        dash = 'dash'))


trace3 = go.Scatter(
      x = occ_3.index,
    y = occ_3['Purchase'].round(-2),
    name = '3',
    line = dict(
        color = 'peachpuff',
        width = 2,
        dash = 'dashdot'))


trace4 = go.Scatter(
      x = occ_4.index,
    y = occ_4['Purchase'].round(-2),
    name = '4',
    line = dict(
        color = 'navy',
        width = 2,
        dash = 'dot'))


trace5 = go.Scatter(
      x = occ_5.index,
    y = occ_5['Purchase'].round(-2),
    name = '5',
    line = dict(
        color = 'orange',
        width = 2,
        dash = 'dashdot'))


trace6 = go.Scatter(
      x = occ_6.index,
    y = occ_6['Purchase'].round(-2),
    name = '6',
    line = dict(
        color = 'pink',
        width = 2,
        dash = 'dot'))


trace7 = go.Scatter(
      x = occ_7.index,
    y = occ_7['Purchase'].round(-2),
    name = '7',
    line = dict(
        color = 'aqua',
        width = 2,
        dash = 'dashdot'))


trace8 = go.Scatter(
      x = occ_8.index,
    y = occ_8['Purchase'].round(-2),
    name = '8',
    line = dict(
        color = 'lime',
        width = 2,
        dash = 'dot'))


trace9 = go.Scatter(
      x = occ_9.index,
    y = occ_9['Purchase'].round(-2),
    name = '9',
    line = dict(
        color = 'red',
        width = 2,
        dash = 'dash'))


trace10 = go.Scatter(
      x = occ_10.index,
    y = occ_10['Purchase'].round(-2),
    name = '10',
    line = dict(
        color = 'green',
        width = 2,
        dash = 'dot'))

data = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10]
layout = dict(title = 'The Average Purchases Based on Occupation less than 10 years',
              xaxis = dict(title = 'Age'),
              yaxis = dict(title = 'Average Purchase ($)')
             )

fig = dict(data=data, layout=layout)
fig['layout']['xaxis'].update(dict(title = 'Age', tickfont = dict(size = 12)))
py.iplot(fig)

occ11= df[df['Occupation'] == 11]
occ12= df[df['Occupation'] == 12]
occ13= df[df['Occupation'] == 13]
occ14= df[df['Occupation'] == 14]
occ15= df[df['Occupation'] == 15]
occ16= df[df['Occupation'] == 16]
occ17= df[df['Occupation'] == 17]
occ18= df[df['Occupation'] == 18]
occ19= df[df['Occupation'] == 19]
occ20= df[df['Occupation'] == 20]

occ_11 = occ11.groupby('Age')["Purchase"].mean().to_frame()
occ_12= occ12.groupby('Age')["Purchase"].mean().to_frame()
occ_13 = occ13.groupby('Age')["Purchase"].mean().to_frame()
occ_14 = occ14.groupby('Age')["Purchase"].mean().to_frame()
occ_15 = occ15.groupby('Age')["Purchase"].mean().to_frame()
occ_16 = occ16.groupby('Age')["Purchase"].mean().to_frame()
occ_17 = occ17.groupby('Age')["Purchase"].mean().to_frame()
occ_18 = occ18.groupby('Age')["Purchase"].mean().to_frame()
occ_19 = occ19.groupby('Age')["Purchase"].mean().to_frame()
occ_20 = occ20.groupby('Age')["Purchase"].mean().to_frame()



trace11 = go.Scatter(
      x = occ_11.index,
    y = occ_11['Purchase'].round(-2),
    name = '11',
    line = dict(
        color = 'moccasin',
        width = 2,
        dash = 'dashdot'))

trace12 = go.Scatter(
      x = occ_12.index,
    y = occ_12['Purchase'].round(-2),
    name = '12',
    line = dict(
        color = 'mistyrose',
        width = 2,
        dash = 'dashdot'))
trace13 = go.Scatter(
      x = occ_13.index,
    y = occ_13['Purchase'].round(-2),
    name = '13',
    line = dict(
        color = 'yellowgreen',
        width = 2,
        dash = 'dashdot'))
trace14 = go.Scatter(
      x = occ_14.index,
    y = occ_14['Purchase'].round(-2),
    name = '14',
    line = dict(
        color = 'maroon',
        width = 2,
        dash = 'dashdot'))

trace15 = go.Scatter(
      x = occ_15.index,
    y = occ_15['Purchase'].round(-2),
    name = '15',
    line = dict(
        color = 'tan',
        width = 2,
        dash = 'dashdot'))

trace16 = go.Scatter(
      x = occ_16.index,
    y = occ_16['Purchase'].round(-2),
    name = '16',
    line = dict(
        color = 'slateblue',
        width = 2,
        dash = 'dashdot'))

trace17 = go.Scatter(
      x = occ_17.index,
    y = occ_17['Purchase'].round(-2),
    name = '17',
    line = dict(
        color = 'aqua',
        width = 2,
        dash = 'dashdot'))

trace18 = go.Scatter(
      x = occ_18.index,
    y = occ_18['Purchase'].round(-2),
    name = '18',
    line = dict(
        color = 'green',
        width = 2,
        dash = 'dashdot'))

trace19 = go.Scatter(
      x = occ_19.index,
    y = occ_19['Purchase'].round(-2),
    name = '19',
    line = dict(
        color = 'red',
        width = 2,
        dash = 'dashdot'))

trace20 = go.Scatter(
      x = occ_20.index,
    y = occ_20['Purchase'].round(-2),
    name = '20',
    line = dict(
        color = 'blue',
        width = 2,
        dash = 'dashdot'))

data = [trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20]
layout = dict(title = 'he Average Purchases Based on Occupation more than 10 years',
              xaxis = dict(title = 'Age'),
              yaxis = dict(title = 'Average Purchase ($)')
             )

fig = dict(data=data, layout=layout)
fig['layout']['xaxis'].update(dict(title = 'Age', tickfont = dict(size = 12)))
py.iplot(fig)


# Creating function for Barplots:
def barplot_func(col, title, colorscale = "Portland", ylabel = "y-axis name"):
    trace = go.Bar(x = col.index, y = col.values, 
                    marker= dict(color = df["Purchase"], colorscale = colorscale))
    
    layout = go.Layout(title = title, yaxis= dict(title = ylabel))
    
    data = [trace]
    
    fig = go.Figure(data = data, layout= layout)
    
    py.iplot(fig)
    
# Gender! 
ma_fe = df["Gender"].value_counts()

barplot_func(col = ma_fe, title = "Number of Male Vs Female", ylabel="Number of customers", colorscale="Picnic")

male = df[df["Gender"] =="M"]
female = df[df["Gender"] =="F"]

trace1 = go.Box(y=male["Purchase"], fillcolor="Blue", name="Male")
trace2 = go.Box(y=female["Purchase"], fillcolor="Pink",name="Female")
layout = go.Layout(title="Purchases based on gender")

data = [trace1, trace2]

fig = go.Figure(data=data, layout=layout)

py.iplot(fig)

#['Greys', 'YlGnBu', 'Greens', 'YlOrRd', 'Bluered', 'RdBu','Reds', 'Blues', 'Picnic', 'Rainbow', 'Portland', 'Jet','Hot', 'Blackbody', 'Earth', 'Electric', 'Viridis', 'Cividis']

age = df["Age"].value_counts()
barplot_func(col=age, title="Age Distribution", ylabel="Number of customers")
city = df["City_Category"].value_counts()
barplot_func(city, "Cities Counts", colorscale="Jet", ylabel="Number of customers")
stay = df["Stay_In_Current_City_Years"].value_counts()
barplot_func(stay, "Stay in current city", ylabel="Number of customers", colorscale="Cividis")

occ = df["Occupation"].value_counts()
barplot_func(occ, "Occupation Distribution", ylabel="Number of customers", colorscale="Earth")

prod1 = df["Product_Category_1"].value_counts()
prod2 = df["Product_Category_2"].value_counts()
prod3 = df["Product_Category_3"].value_counts()

age = df["Age"].value_counts()
colors = ['lime', 'navy', 'red', 'lightgreen', 'pink', 'lightblue', 'purple']

    
def sub_plot_pie(col1, col2,title = "Main title",  title1 = "Left plot title", title2 = "Right plot title" ):
    
    trace1 = go.Pie(labels = col1.index, values = col1.values,name= title1, 
                    hole= .6, textposition= "inside",
                    
                    domain= dict(x = [0, .48]), 
                  
                    marker=dict(colors=colors))
    
    
    trace2 = go.Pie(labels = col2.index, values = col2.values,name= title2, 
                    hole= .6, textposition= "inside",
                    
                    domain= dict(x = [.51, 1]), 
                  
                    marker=dict(colors=colors))
    
    
    layout = go.Layout(title = title,annotations = [dict(text = title1,
                                                font = dict(size = 13),
                                                showarrow = False,
                                                x = 0, y = 1),
                                           dict(text = title2,
                                                font = dict(size = 13),
                                                showarrow = False,
                                                x = .6,y = 1
                                               ) ] )
    data = [trace1, trace2]                                              
    
    fig = go.Figure(data = data, layout = layout)
  
    py.iplot(fig)
sub_plot_pie(col1=prod1, col2=prod2, title="Product Sold", title1="Product 1", title2="Product2")

## Distribution of the purchases 
plt.figure(figsize =(16,8))
sns.distplot(df["Purchase"], bins=10)

sub_plot_pie(col1=prod3, col2=age, title="Product Sold & Age Distribution", title1="Product 3 ", title2="Age")

df.head(2)

'''dat = df[['Age','Occupation','Purchase']]
dat["index"] = np.arange(len(dat))
fig = ff.create_scatterplotmatrix(dat, diag='box', index='index',
                                  colormap_type='cat',colormap='Jet',
                                  height=800, width=800)
py.iplot(fig)'''


