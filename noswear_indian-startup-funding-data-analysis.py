import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
%matplotlib inline
import matplotlib.pyplot as plt
import seaborn as sns
import dateutil
import squarify
import os
fund_data = pd.read_csv('../input/startup_funding.csv')
fund_data.head()
fund_data.shape
fund_data.info()
fund_data.columns 
fund_data.isnull().sum().sort_values(ascending =False)
missing = fund_data.isnull().sum().sort_values(ascending=False)
percent = (missing/fund_data.isnull().count())*100
print("Percentage of missing data")
percent
fund_data.drop(['Remarks'],axis=1,inplace=True)
fund_data['Date']=fund_data['Date'].replace({"12/05.2015":"12/05/2015"})
fund_data['Date']=fund_data['Date'].replace({"13/04.2015":"13/04/2015"})
fund_data['Date']=fund_data['Date'].replace({"15/01.2015":"15/01/2015"})
fund_data['Date']=fund_data['Date'].replace({"22/01//2015":"22/01/2015"})
fund_data['StartupName'] = fund_data['StartupName'].replace({"Flipkart.com":"Flipkart"})
fund_data['IndustryVertical']=fund_data['IndustryVertical'].replace({"ECommerce":"eCommerce"})
fund_data['IndustryVertical']=fund_data['IndustryVertical'].replace({"ecommerce":"eCommerce"})
fund_data['IndustryVertical']=fund_data['IndustryVertical'].replace({"Ecommerce":"eCommerce"})
fund_data['InvestmentType']=fund_data['InvestmentType'].replace({"Crowd funding":"Crowd Funding"})
fund_data['InvestmentType']=fund_data['InvestmentType'].replace({"SeedFunding":"Seed Funding"})
fund_data['InvestmentType']=fund_data['InvestmentType'].replace({"PrivateEquity":"Private Equity"})
fund_data['StartupName']=fund_data['StartupName'].replace({"practo":"Practo"})
fund_data['StartupName']=fund_data['StartupName'].replace({"couponmachine.in":"Couponmachine"})
fund_data['StartupName']=fund_data['StartupName'].replace({"Olacabs":"Ola Cabs"})
fund_data['StartupName']=fund_data['StartupName'].replace({"Ola":"Ola Cabs"})
fund_data['AmountInUSD'] = fund_data['AmountInUSD'].apply(lambda x:float(str(x).replace(",","")))
print("Minimum Investment")
fund_data['AmountInUSD'].min()
fund_data[fund_data['AmountInUSD']==16000.0]
print("Maximum Investment")
fund_data['AmountInUSD'].max()
fund_data[fund_data.AmountInUSD == 1400000000.0]
fund_data[fund_data['StartupName'] == "Flipkart"]
fund_data[fund_data['StartupName'] == "Paytm"]
fund_data['AmountInUSD'].mean()
fund_data['AmountInUSD'].sum()
fund_data["yearmonth"] = (pd.to_datetime(fund_data['Date'],format='%d/%m/%Y').dt.year*100)+(pd.to_datetime(fund_data['Date'],format='%d/%m/%Y').dt.month)
temp = fund_data['yearmonth'].value_counts().sort_values(ascending = False)
print("Number of funding per month in decreasing order (Funding Wise)\n\n",temp)
year_month = fund_data['yearmonth'].value_counts()
plt.figure(figsize=(15,8))
sns.barplot(year_month.index, year_month.values, alpha=0.9)
plt.xticks(rotation='vertical')
plt.xlabel('Year-Month of transaction', fontsize=12)
plt.ylabel('Number of fundings made', fontsize=12)
plt.title("Year-Month - Number of Funding Distribution", fontsize=16)
plt.show()
plt.figure(figsize=(15,8))
sns.barplot(fund_data['yearmonth'], fund_data['AmountInUSD'], alpha=0.9)
plt.xticks(rotation='vertical')
plt.xlabel('YearMonth', fontsize=12)
plt.ylabel('Amonut Of Investments', fontsize=12)
plt.title("YearMonth - Number of fundings distribution", fontsize=16)
plt.show()
len(fund_data['StartupName'])
len(fund_data['StartupName'].unique())
tot = (fund_data['StartupName'].value_counts()).values
c=0
for i in tot:
    if i > 1:
        c=c+1
print("Startups that got funding more than 1 times = ",c)
fund_count  = fund_data['StartupName'].value_counts()
fund_count = fund_count.head(20)
print(fund_count)
plt.figure(figsize=(15,8))
sns.barplot(fund_count.index, fund_count.values, alpha=0.9)
plt.xticks(rotation='vertical')
plt.xlabel('Startups', fontsize=12)
plt.ylabel('Number of fundings made', fontsize=12)
plt.title("Startups-Number of fundings distribution", fontsize=16)
plt.show()
len(fund_data['IndustryVertical'].unique())
IndustryVert = fund_data['IndustryVertical'].value_counts().head(20)
print(IndustryVert)
plt.figure(figsize=(15,8))
sns.barplot(IndustryVert.index, IndustryVert.values, alpha=0.9)
plt.xticks(rotation='vertical')
plt.xlabel('Industry Verticals', fontsize=12)
plt.ylabel('Number of fundings made', fontsize=12)
plt.title("Industry Verticals-Number of fundings distribution", fontsize=16)
plt.show()
sub_vertical = fund_data['SubVertical']
print("Total number of subverticals : ",len(sub_vertical.unique()))
sub_vertical=sub_vertical.value_counts().head(25)
print(sub_vertical)
plt.figure(figsize=(15,8))
sns.barplot(sub_vertical.index, sub_vertical.values, alpha=0.9)
plt.xticks(rotation='vertical')
plt.xlabel('Industry Sub Verticals', fontsize=12)
plt.ylabel('Number of fundings made', fontsize=12)
plt.title("Industry Sub Verticals-Number of fundings distribution", fontsize=16)
plt.show()
Investment_Type = fund_data['InvestmentType'].value_counts()
print(Investment_Type)
plt.figure(figsize=(12,5))
sns.barplot(Investment_Type.index, Investment_Type.values, alpha=0.9)
plt.xticks(rotation='vertical')
plt.xlabel('Investment Type', fontsize=12)
plt.ylabel('Number of fundings made', fontsize=12)
plt.title("Investment Type - Number of fundings distribution", fontsize=16)
plt.show()
len(fund_data['CityLocation'].unique())

fund_data['CityLocation'].value_counts().head(10)
fund_city = fund_data['CityLocation'].value_counts()
plt.figure(figsize=(16,9))
sns.barplot(fund_city.index, fund_city.values, alpha=0.9)
plt.xticks(rotation='vertical')
plt.xlabel('City', fontsize=12)
plt.ylabel('Number of fundings made', fontsize=12)
plt.title("City - Number of fundings distribution", fontsize=16)
plt.show()
fund_data['InvestorsName'] = fund_data['InvestorsName'].fillna("No info Available")
names = fund_data["InvestorsName"][~pd.isnull(fund_data["InvestorsName"])]
print(names.head())
Investor_list = fund_data['InvestorsName'].str.split(',').apply(pd.Series)
Investor_list.head()
print("Combining all columns into one")
df = Investor_list.stack(dropna=False).reset_index(drop=True).to_frame('newinvest')
print(df.head(10))
InvestorsName = df.dropna(axis=0, how='all')
# Correcting typos
InvestorsName=InvestorsName.replace({" Sequoia Capital":"Sequoia Capital"})
InvestorsName=InvestorsName.replace({"Undisclosed investors":"Undisclosed Investors"})
InvestorsName=InvestorsName.replace({"undisclosed investors":"Undisclosed Investors"})
InvestorsName=InvestorsName.replace({"undisclosed Investors":"Undisclosed Investors"})
InvestorsName=InvestorsName.replace({"Undisclosed":"Undisclosed Investors"})
InvestorsName=InvestorsName.replace({"Undisclosed Investor":"Undisclosed Investors"})
InvestorsName=InvestorsName.replace({" Accel Partners":"Accel Partners"})
InvestorsName=InvestorsName.replace({" Blume Ventures":"Blume Ventures"})
InvestorsName=InvestorsName.replace({" SAIF Partners":"SAIF Partners"})
InvestorsName=InvestorsName.replace({" Kalaari Capital":"Kalaari Capital"})
len(InvestorsName['newinvest'])
# Now all investors are sperated into individual rows
InvestorsName.head(10)
InvestorsName['newinvest'] = InvestorsName['newinvest'].str.strip()
print(len(InvestorsName['newinvest'].unique()))
Investors_top50 = InvestorsName['newinvest'].value_counts().head(50)
# Top 50 investors
print(Investors_top50)
plt.figure(figsize=(16,9))
sns.barplot(Investors_top50.index, Investors_top50.values, alpha=0.9)
plt.xticks(rotation='vertical')
plt.xlabel('Investors', fontsize=12)
plt.ylabel('Number of Startups Invested In', fontsize=12)
plt.title("Investors - Investment distribution", fontsize=16)
plt.show()
plt.figure(figsize=(16,9))
squarify.plot(sizes=Investors_top50.values,label=Investors_top50.index, value=Investors_top50.values,color=["#FF6138","#FFFF9D","#BEEB9F", "#79BD8F","#684656","#E7EFF3"], alpha=0.6)
plt.title('Distribution of Investors and Investments Done')

