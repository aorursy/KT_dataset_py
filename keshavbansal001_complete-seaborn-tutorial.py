import numpy as np
import pandas as pd

import seaborn as sns
import matplotlib.pyplot as plt

plt.style.use('fivethirtyeight')

%matplotlib inline
tips = sns.load_dataset('tips')
tips.groupby('smoker').tip.agg([min,max])
sns.barplot(x='day',y='tip',data=tips)
sns.barplot(x='day',y='total_bill',data=tips)
sns.barplot(x='day',y='tip',data=tips, hue='sex')
sns.barplot(x='day',y='tip',data=tips, hue='sex', palette='summer_r')
sns.barplot(x='day',y='tip',data=tips, hue='smoker')
sns.barplot(x='total_bill',y='day',data=tips, palette='spring')
sns.barplot(x='day',y='tip',data=tips,palette='spring',order=['Sat','Fri','Sun','Thur'])
sns.barplot(x='day',y='total_bill',data=tips)
from numpy import median
sns.barplot(x='day',y='total_bill',data=tips, estimator=median, palette='spring_r')
tips.total_bill[tips.day == 'Fri'].median()
from numpy import mean
sns.barplot(x='smoker',y='tip', data=tips, estimator=median)
sns.barplot(x='smoker',y='tip',data=tips,estimator=median,hue='sex',palette='coolwarm')
sns.barplot(x='smoker',y='tip',data=tips,ci=99)
sns.barplot(x='smoker',y='tip',data=tips,ci=68,palette='winter_r', estimator=median)
sns.barplot(x='smoker',y='tip',data=tips,ci=34)
sns.barplot(x='day',y='total_bill',data=tips,palette='spring',capsize=0.1)
sns.barplot(x='day',y='total_bill',data=tips,palette='spring',capsize=0.5)
sns.barplot(x='day',y='total_bill',data=tips,palette='husl',hue='sex',capsize=0.1)
sns.barplot(x='size',y='tip',data=tips,capsize=0.5,palette='autumn')
sns.barplot(x='size',y='tip',data=tips,capsize=0.15,palette='husl')
sns.barplot(x='size',y='tip',data=tips,capsize=0.15,color='green')
sns.barplot(x='size',y='tip',data=tips,capsize=0.15,color='red', saturation=0.7)
num = np.random.randn(150)
sns.distplot(num)
sns.distplot(num, color='red')
label_dist = pd.Series(num, name='variable x')
sns.distplot(label_dist)
sns.distplot(label_dist, vertical=True)
sns.distplot(label_dist, hist=False)
sns.distplot(label_dist,rug=True,hist=False)
tips = sns.load_dataset('tips')
sns.boxplot(x=tips['size'])
sns.boxplot(x=tips['total_bill'])
sns.boxplot(x='sex',y='total_bill',data=tips)
sns.boxplot(x='day',y='total_bill',data=tips)
sns.boxplot(x='day',y='total_bill',data=tips,hue='sex',palette='husl')
sns.boxplot(x='day',y='total_bill',data=tips,hue='smoker',palette='coolwarm')
sns.boxplot(x='day',y='total_bill',data=tips,hue='time')
sns.boxplot(x='day',y='total_bill',data=tips,hue='time',order=['Sun','Sat','Fri','Thur'])
sns.boxplot(x='sex', y='tip',data=tips, order=['Female','Male'])
iris = sns.load_dataset('iris')
iris.head()
sns.boxplot(data=iris, palette='coolwarm')
sns.boxplot(data=iris,orient='horizontal', palette='husl') # horizontal or h
sns.boxplot(data=iris,orient='v', palette='husl') # vertical or v
sns.boxplot(x='day',y='total_bill', data=tips, palette='husl')
sns.swarmplot(x='day',y='total_bill',data=tips)
sns.boxplot(x='day',y='total_bill', data=tips, palette='husl')
sns.swarmplot(x='day',y='total_bill',data=tips,color='black')
sns.boxplot(x='day',y='total_bill', data=tips, palette='husl')
sns.swarmplot(x='day',y='total_bill',data=tips,color='0.9')
sns.boxplot(x='day',y='total_bill', data=tips, palette='husl')
sns.swarmplot(x='day',y='total_bill',data=tips,color='0.3')
tips = sns.load_dataset('tips')
sns.stripplot(x=tips['tip'], color='green')
sns.stripplot(x=tips['total_bill'], color='red')
sns.stripplot(x='day',y='total_bill', data=tips)
sns.stripplot(x='day',y='total_bill', data=tips, jitter=False)
sns.stripplot(x='day',y='total_bill', data=tips, jitter=0.2)
sns.stripplot(y='day',x='total_bill', data=tips, jitter=1)
sns.stripplot(x='day',y='total_bill', data=tips, linewidth=0.75, hue='sex')
sns.stripplot(x='day',y='total_bill', data=tips, linewidth=0.75, hue='sex', split=True)
sns.stripplot(x='day',y='total_bill',data=tips,hue='smoker',split=True, linewidth=0.75)
sns.stripplot(x='day',y='total_bill',data=tips,hue='smoker',split=True, linewidth=0.75, palette='winter_r', order=['Sun','Sat','Thur','Fri'])
sns.stripplot(x='sex',y='tip', data=tips, order=['Female','Male'], palette='winter_r')
sns.stripplot(x='sex',y='tip', data=tips, order=['Female','Male'], palette='winter_r', marker='D', linewidth=0.75)
sns.stripplot(x='day',y='total_bill',data=tips,marker='D', size=4, hue='sex', edgecolor='black',split=True, linewidth=0.75, alpha=0.5)
iris = sns.load_dataset('iris')
x = sns.PairGrid(iris)
x = x.map(plt.scatter)
x = sns.PairGrid(iris)
x = x.map_diag(plt.hist)
x = sns.PairGrid(iris)
x = x.map_diag(plt.hist)
x = x.map_offdiag(plt.scatter)
x = sns.PairGrid(iris, hue='species')
x = x.map_diag(plt.hist)
x = x.map_offdiag(plt.scatter)
x = sns.PairGrid(iris, hue='species')
x = x.map_diag(plt.hist)
x = x.map_offdiag(plt.scatter)
x = x.add_legend()
x = sns.PairGrid(iris, hue='species', palette='husl') # husl,winter_r,spring_r,summer_r,RdBu
x = x.map_diag(plt.hist)
x = x.map_offdiag(plt.scatter)
x = x.add_legend()
x = sns.PairGrid(iris, hue='species')
x = x.map_diag(plt.hist, histtype='step', linewidth=3)
x = x.map_offdiag(plt.scatter)
x = x.add_legend()
x = sns.PairGrid(iris, vars=['petal_length','petal_width'])
x = x.map(plt.scatter)
x = sns.PairGrid(iris,hue='species', palette='spring_r',vars=['petal_length','petal_width', 'sepal_width'])
x = x.map_diag(plt.hist, edgecolor='black')
x = x.map_offdiag(plt.scatter, edgecolor='black')
x = x.add_legend()
print(x)
x = sns.PairGrid(iris,hue='species',x_vars=['petal_length','petal_width'], y_vars=['sepal_length','sepal_width'])
x = x.map(plt.scatter)
x = sns.PairGrid(iris,hue='species')
x = x.map_diag(plt.hist)
x = x.map_upper(plt.scatter)
x = x.map_lower(sns.kdeplot)
x = x.add_legend()
x = sns.PairGrid(iris,hue='species', hue_kws={'marker':['D','s','*']})
x = x.map(plt.scatter,s=10) # s: size
x = x.add_legend()
x = sns.PairGrid(iris,hue='species', hue_kws={'marker':['D','s','*']})
x = x.map(plt.scatter, edgecolor='black')
x = x.add_legend()
tips = sns.load_dataset('tips')
sns.violinplot(x=tips['tip'])
tips.head()
sns.violinplot(x=tips['total_bill'])
sns.violinplot(x='size',y='total_bill',data=tips)
sns.violinplot(x='day',y='total_bill',data=tips)
sns.violinplot(x='day',y='total_bill',data=tips, hue='sex')
sns.violinplot(x='day',y='total_bill',data=tips, hue='smoker',palette='husl')
sns.violinplot(x='day',y='total_bill',data=tips, hue='smoker',split=True)
sns.violinplot(x='day',y='total_bill',data=tips, hue='smoker',split=True,order=['Sun','Sat','Thur','Fri'])
sns.violinplot(x='day',y='total_bill',data=tips,hue='smoker',palette='husl',inner='quartile') # quartiles are visible as lines inside the violinplot
sns.violinplot(x='day',y='total_bill',data=tips,hue='smoker',palette='husl',inner='quartile', split=True)
sns.violinplot(x='day',y='total_bill',data=tips,hue='sex',palette='husl',inner='quartile', split=True,scale='count') # widht of the violin is adjusted according to the number of observations
sns.violinplot(x='day',y='total_bill',data=tips,hue='sex',palette='husl',inner='quartile', scale='count')
sns.violinplot(x='day',y='total_bill',data=tips,hue='sex',palette='husl',inner='stick', scale='count')
sns.violinplot(x='day',y='total_bill',data=tips,hue='sex',scale='count',scale_hue=False) # relative widths checked
sns.violinplot(x='day',y='total_bill',data=tips,hue='sex',scale='count')
sns.violinplot(x='day',y='total_bill',data=tips,hue='smoker',inner='quartile',scale='count',scale_hue=True,split=True,bw=0.7) # bw : bandwidth
sns.violinplot(x='day',y='total_bill',data=tips,hue='smoker',inner='quartile',scale='count',scale_hue=True,split=True,bw=0.1)
flights = sns.load_dataset('flights')
flights.head()
flights = flights.pivot('month','year','passengers')
flights
sns.heatmap(flights)
sns.clustermap(flights) # clusters together similar data
sns.clustermap(flights,col_cluster=False) #row_cluster = True
sns.heatmap(flights,cmap='coolwarm') # cmap='color-map'
sns.clustermap(flights,cmap='coolwarm', linewidth=1)
sns.clustermap(flights,cmap='Blues_r', linewidth=1.5)
sns.clustermap(flights,cmap='coolwarm', linewidths=1.5)
sns.clustermap(flights,cmap='coolwarm', linewidths=1.5, figsize=(8,8))
sns.clustermap(flights, standard_scale=1) # standard_scale:{0:rows,1:columns}
sns.clustermap(flights, standard_scale=0)
# normalising our dataset = z_score  0/1 : rows/columns
sns.clustermap(flights,z_score=0)
sns.clustermap(flights,z_score=1)
normal = np.random.rand(12,15)
sns.heatmap(normal)
sns.heatmap(normal, annot=True) # annot : annotation
sns.heatmap(normal, vmin=0,vmax=2)
flights = sns.load_dataset('flights')
flights.head()
flights = flights.pivot('month','year','passengers')
sns.heatmap(flights)
sns.heatmap(flights, annot=True)
sns.heatmap(flights, annot=True, fmt='d', linewidths=0.9)
sns.heatmap(flights, annot=True, fmt='d', linewidths=0.9, vmin=200,vmax=650)
sns.heatmap(flights, cmap='RdBu', fmt='d', annot=True)
sns.heatmap(flights,cmap='coolwarm', center=flights.loc['June',1954], annot=True, fmt='d')
sns.heatmap(flights,cmap='coolwarm', center=flights.loc['March',1955], annot=True, fmt='d')
sns.heatmap(flights,cmap='coolwarm', center=flights.loc['June',1954], annot=True, fmt='d', cbar=False)
tips = sns.load_dataset('tips')
x = sns.FacetGrid(tips,row='smoker',col='time')
# Initialising the FacetGrid
x = x.map(plt.hist,'total_bill')
x = sns.FacetGrid(tips,row='smoker',col='time')
x = x.map(plt.hist,'total_bill', color='red', bins=15)
x = sns.FacetGrid(tips, col='time',row='smoker')
x = x.map(plt.scatter,'total_bill','tip')
x = sns.FacetGrid(tips, col='time',row='smoker')
x = x.map(sns.regplot,'total_bill','tip')
x = sns.FacetGrid(tips,col='time',row='smoker')
x = x.map(plt.scatter,'total_bill','tip')
x = sns.FacetGrid(tips,col='time',hue='smoker')
x = x.map(plt.scatter,'total_bill','tip')
x = x.add_legend()
x = sns.FacetGrid(tips,col='time',hue='smoker')
x = x.map(plt.scatter,'total_bill','tip').add_legend()
x = sns.FacetGrid(tips,col='day')
x = x.map(sns.boxplot,'total_bill','time')
x = sns.FacetGrid(tips,col='day')
x = x.map(sns.boxplot,'time','total_bill')
x = sns.FacetGrid(tips,col='day', size=7,aspect=0.2)
x = x.map(sns.boxplot,'time','total_bill')
x = sns.FacetGrid(tips,col='day', col_order=['Sat','Sun','Fri','Thur'],size=7,aspect=0.4)
x = x.map(sns.boxplot,'time','total_bill', color='red')
x = sns.FacetGrid(tips,col='time',hue='smoker', palette='coolwarm', size=3)
x = x.map(plt.scatter,'total_bill','tip').add_legend()
mean = [0,0]
cov = [[0.2,0],[0,3]]
x_axis,y_axis = np.random.multivariate_normal(mean,cov,size=40).T
sns.kdeplot(x_axis)
sns.kdeplot(y_axis)
sns.kdeplot(x_axis, shade=True)
sns.kdeplot(x_axis, shade=True, color='green')
sns.kdeplot(y_axis, shade=True, color='purple')
sns.kdeplot(x_axis,y_axis)
sns.kdeplot(x_axis,y_axis, shade=True)
sns.kdeplot(x_axis,y_axis, cmap='RdBu')
sns.kdeplot(x_axis,y_axis, n_levels=20, cmap='RdBu')
sns.kdeplot(y_axis,bw=1.5) # bandwidth
sns.kdeplot(y_axis,bw=0.5) # bandwidth
sns.kdeplot(y_axis,bw=0.1)
sns.kdeplot(y_axis, vertical=True)
iris = sns.load_dataset('iris')
setosa = iris.loc[iris.species == 'setosa']
versicolor = iris.loc[iris.species == 'versicolor']
sns.kdeplot(setosa.petal_length, setosa.petal_width)
sns.kdeplot(versicolor.petal_length, versicolor.petal_width)
sns.kdeplot(setosa.petal_length, setosa.petal_width, cmap='coolwarm')
sns.kdeplot(versicolor.petal_length, versicolor.petal_width, cmap='RdBu')
sns.kdeplot(setosa.petal_length, setosa.petal_width, cmap='coolwarm')
sns.kdeplot(versicolor.petal_length, versicolor.petal_width, cmap='RdBu', shade=True)
sns.kdeplot(setosa.petal_width, setosa.petal_length, cmap='coolwarm')
sns.kdeplot(versicolor.petal_width, versicolor.petal_length, cmap='RdBu')
sns.kdeplot(setosa.petal_length, setosa.petal_width, cmap='coolwarm', n_levels = 12)
sns.kdeplot(versicolor.petal_length, versicolor.petal_width, cmap='RdBu', n_levels = 14)
tips = sns.load_dataset('tips')
tips.head()
iris = sns.load_dataset('iris')
iris.head()
sns.jointplot(x='total_bill', y='tip', data=tips)
sns.jointplot(x='sepal_length',y='sepal_width', data=iris)
sns.jointplot(x='total_bill',y='tip',data=tips,kind='reg', color='red')
sns.jointplot(x='total_bill',y='tip', data=tips, kind='hex')
sns.jointplot(x='total_bill',y='tip',data=tips,kind='kde')
sns.jointplot(x='sepal_length',y='sepal_width',data=iris,kind='kde')
# stat_ func
from scipy.stats import spearmanr
sns.jointplot(x='total_bill',y='size',data=tips,stat_func=spearmanr, color='blue')
sns.jointplot(x='total_bill',y='tip',data=tips,ratio=4,size=5, color='blue')
sns.jointplot(x='total_bill',y='tip',data=tips,ratio=6,size=5, color='blue')
sns.jointplot(x='total_bill',y='tip',data=tips,ratio=1,size=5, color='blue')
tips = sns.load_dataset('tips')
tips.head()
sns.regplot(x='total_bill',y='tip',data=tips, color='green')
mean = [2,5]
cov = [[1.1,0.4],[2.2,3]]

x_value,y_value = np.random.multivariate_normal(mean,cov,100).T

sns.regplot(x=x_value,y=y_value,color='purple')
seriesx_value = pd.Series(x_value, name='Var-X')
seriesy_value = pd.Series(y_value, name='Var-Y')

sns.regplot(x=seriesx_value,y=seriesy_value)
sns.regplot(x=seriesx_value,y=seriesy_value, marker='D', color='grey')
sns.regplot(x='total_bill',y='tip',data=tips)
sns.regplot(x='total_bill',y='tip',data=tips,marker='D', scatter_kws={'color':'blue'},line_kws={'color':'red','linewidth':2})
sns.regplot(x=x_value,y=y_value,marker='D', scatter_kws={'color':'blue'},line_kws={'color':'red','linewidth':2})
sns.regplot(x=x_value,y=y_value,ci=0)
sns.regplot(x=x_value,y=y_value,ci=100) # ci : confidence interval
sns.regplot(x='size',y='total_bill',data=tips)
sns.regplot(x='size',y='total_bill',data=tips, x_jitter=0.18, scatter_kws={'color':'red'})
sns.regplot(x='size',y='total_bill',data=tips, x_estimator=np.mean)
iris = sns.load_dataset('iris')
tips = sns.load_dataset('tips')
sns.pairplot(iris)
sns.pairplot(tips)
sns.pairplot(iris,hue='species')
sns.pairplot(iris,hue='species',palette='Blues_d')
# markers
sns.pairplot(iris,hue='species',markers=['o','D','s'], palette='husl')
# vars
sns.pairplot(iris,vars=['sepal_length','sepal_width'])
sns.pairplot(tips,vars=['total_bill','tip'])
sns.pairplot(iris,size=3,vars=['sepal_length','sepal_width'])
# x_vars , y_vars
sns.pairplot(iris, x_vars=['petal_length','petal_width'],y_vars=['sepal_length','sepal_width'], palette='husl',hue='species')
# diag_kind
sns.pairplot(iris, diag_kind='kde',palette='husl',hue='species')
sns.pairplot(iris,kind='reg', diag_kind='kde',palette='husl',hue='species')
sns.pairplot(tips,kind='reg')