# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 5GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session
print("Задание №3")
password = 88005553535 # Пароль, который программа ждёт от пользователя (с ним будет сравниваться пароль, введенный пользователем в your_password)
count = 5 # Переменная, отвечающая за подсчет оставшихся попыток ввода пароля
while True: # Запуск бесконечного цикла
    your_password = input("Введите ваш числовой пароль: ") # Ввод пароля в строковом типе
    if your_password.isdecimal() == False:  # Проверка на то, что пароль может быть корректно конвертирован в тип int. Если условие верно, то выполняется дальнейший код в условии
        print("Пароль содержит некорректные символы!") # Вывод на экран
        count-= 1 # Уменьшение количества попыток ввода пароля
        print("У вас осталось попыток: ",count) # Вывод на экран информации о количестве оставшихся попыток ввода пароля
        if count == 0: # Если количество попыток ввода пароля достигло 0, то выполняется дальнейший код в условии
            print("Все попытки закончились. Завершение программы!") # Вывод на экран
            break # Прерывание работы цикла
        continue # Переход на следующую итерацию цикла
    if int(your_password) != password: # Сравнивание паролей. Если пароли не совпадают, то выполняется дальнейший код в условии
        count-= 1 # Уменьшение количества попыток ввода пароля
        print("Пароль введен неверно!") # Вывод на экран
        if count == 0: # Если количество попыток ввода пароля достигло 0, то выполняется дальнейший код в условии
            print("Все попытки закончились. Завершение программы!") # Вывод на экран
            break # Прерывание работы цикла
        print("У вас осталось попыток: ",count) # Вывод на экран информации о количестве оставшихся попыток ввода пароля
    else: # Эта ветка выполняется в случаи, если пароли совпадают
        print("Пароль введен верно!") # Вывод на экран 
        break # Прерывание работы цикла
print("Задание №4")
print("Первый способ")
n = int(input("Введите число: ")) # Ввод числа
counter = 0  # Счетчик, в него будет записываться сумма квадратов чисел
for i in range(1,n+1): # Цикл от 1 до введенного пользователейм числа
    counter+=i**2  # Увеличение значение счетчика на вычисленное значение квадрата числа
print("Сумма последовательности равна: ", counter) # Вывод результата на экран
print("Второй способ")
n = int(input("Введите число: ")) # Ввод числа
Sum = (n*(n+1)*(2*n+1))//6 # Высичление суммы квадратов чисел от 1 до введенного пользователем числа
print("Сумма последовательности равна: ", Sum) # Вывод результата на экран
print("Задание №5")
m = int(input("Сколько чисел будет введено?: ")) # Ввод количества чисел в последовательности
maximum = 0 # Переменная, в которую будет записано максимальное из введенных чисел
for _ in range(m): # Цикл, выполняющийся m раз
    n = int(input("Введите число: ")) # Ввод числа
    if n>=maximum: # Условие сравнение введенного числа и максимального числа на данный момент. Если условие верно, то выполняется дальнейший код в условии
        maximum = n # В переменную maxumum записывается введенное число
print("Наибольшее введенное число - это число", maximum) # Вывод результата на экран
print("Задание №6")
s = float(input("Введите число: ")) # Ввод числа
x = 1 # Знаменатель членов гармонического ряда
counter = 0 # Переменная, в которую записывается сумма членов ряда
while True: # Бесконечный цикл
    counter+= 1/x # Добавление очередного члена ряда к уже имеющимся
    if counter>s: # Условие - Если сумма членов ряда превысила введенное число, то выполняется дальнейший код в условии, иначе осуществляется переход к конструкции else
        print("Количество членов последовательности = ",x) # Вывод результата на экран 
        break # Прерывание работы цикла
    else: # Выполняется, если условие до этого не было выполнено
        x+=1 # Увеличение значения знаменателя члена гармонического ряда