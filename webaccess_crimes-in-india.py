import pandas as pd
import numpy as np
from pandas_highcharts.core import serialize
from pandas_highcharts.display import display_charts
from IPython.display import display,HTML
pd.options.display.max_columns = None
from datascience import Table
from functools import reduce

# Reading csv data
dataDis2011      = Table.read_table('../input/india_census_2011.csv')
dataMissChildren = Table.read_table('../input/missing_traced_children.csv')
dataCrime        = Table.read_table('../input/crimes.csv')
dataCyberCrm     = Table.read_table('../input/cyber_crime.csv')
dataChldCrm      = Table.read_table('../input/crime_against_children.csv')
dataTrafficing   = Table.read_table('../input/trafficing.csv')
dataRapeVictm    = Table.read_table('../input/rape_victims.csv')
dataKidnapping   = Table.read_table('../input/kidnapping.csv')
dataJuvenileCrm  = Table.read_table('../input/juvenile_crime.csv')
dataMurderVictm  = Table.read_table('../input/murder_victims.csv')
dataCorruption   = Table.read_table('../input/coruption_case.csv')
dataCurSeized    = Table.read_table('../input/currency_siezed.csv')
dataJuvArrest    = Table.read_table('../input/juvenile_arrested_bckgrnd.csv')
dataMrdrMotive   = Table.read_table('../input/murder_motives.csv')
dataVioCrm       = Table.read_table('../input/violent_crime_incidence.csv')
SWCRIdf = dataCrime.to_df()
SWCRIdfg = SWCRIdf.groupby(['STATE NAME'])[['CRIME RATE']].sum()
display_charts(SWCRIdfg , kind="bar", title="State wise crime rates in India",figsize = (1000, 700))
SWPSC = dataCrime.select(1,5)
SWPSCt = SWPSC.relabeled(1,'CRIME PER')
SWPSCdf = SWPSCt.to_df()
SWPSCdfg = SWPSCdf.groupby(['STATE NAME'])[['CRIME PER']].sum()
display_charts(SWPSCdfg, kind='pie', title='State wise crime per share in India', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWPSCC = dataCyberCrm.select(1,5)
SWPSCCt = SWPSCC.relabeled(1,'Cyber Crime')
SWPSCCdf = SWPSCCt.to_df()
SWPSCCdfg = SWPSCCdf.groupby(['STATE NAME'])[['Cyber Crime']].sum()
display_charts(SWPSCCdfg, kind='pie', title='Cyber crimes in different states of India', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWPCAC = dataChldCrm.select(1,5)
SWPCACt = SWPCAC.relabeled(1,'Crime against child')
SWPCACdf = SWPCACt.to_df()
SWPCACdfg = SWPCACdf.groupby(['STATE NAME'])[['Crime against child']].sum()
display_charts(SWPSCCdfg, kind='pie', title='Cyber crimes in different states of India', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWMRCI = dataMissChildren.select(1,2,3,5,6)
SWMRCIt = SWMRCI.relabeled(1,'Missing Female').relabeled(2,'Missing Male').relabeled(3,'Traced Female').relabeled(4,'Traced Male')
SWMRCIdf = SWMRCIt.to_df()
SWMRCIdfg = SWMRCIdf.groupby(['STATE NAME'])[['Missing Female','Traced Female','Missing Male','Traced Male']].sum()
display_charts(SWMRCIdfg , kind="bar", title="Child missing and recovery",figsize = (1100, 700))
MCRPDSI    = dataMissChildren.select(1,8,9,10)
MCRPDSIt   = MCRPDSI.relabeled(1,'Recovery Female').relabeled(2,'Recovery Male').relabeled(3,'Recovery Total')
MCRPDSIdf  = MCRPDSIt.to_df()
MCRPDSIdfg = MCRPDSIdf.groupby(['STATE NAME'])[['Recovery Female','Recovery Male','Recovery Total']].sum()
display_charts(MCRPDSIdfg , kind="bar", title="Missing child recovery per",figsize = (1000, 700))
swTraffic = dataTrafficing.select(1,2,3,5,6)
swTraffict = swTraffic.relabeled(1,'Below 18 Yrs - Male').relabeled(2,'Below 18 Yrs - Female').relabeled(3,'Above 18 Yrs - Male').relabeled(4,'Above 18 Yrs - Female')
swTrafficdf = swTraffict.to_df()
swTrafficdfg = swTrafficdf.groupby(['STATE NAME'])[['Below 18 Yrs - Male','Below 18 Yrs - Female','Above 18 Yrs - Male','Above 18 Yrs - Female']].sum()
display_charts(swTrafficdfg , kind="barh", title="State wise victims trafficed",figsize = (1000, 700))
SWTPVT     = dataTrafficing.select(1,10)
SWTPVTt    = SWTPVT.relabeled(1,'Total trafficed')
SWTPVTdf   = SWTPVTt.to_df()
totaltr    = SWTPVTdf['Total trafficed'].sum()
SWTPVTdf['Trafficed'] = SWTPVTdf['Total trafficed'].div(totaltr).multiply(100)
SWTPVTdfg  = SWTPVTdf.groupby(['STATE NAME'])[['Trafficed']].sum()
display_charts(SWTPVTdfg, kind='pie', title='Per of victims trafficed in India', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
POHTP   = dataTrafficing.select(1,11,12,13,15,16,17,18,19,20,21)
POHTPt  = POHTP.relabeled(1,'Forced Labour').relabeled(2,'Sexual Exploitation for Prostitution').relabeled(3,'Domestic Servitude').relabeled(4,'Forced Marriage').relabeled(5,'Petty Crimes').relabeled(6,'Child Pornography').relabeled(7,'Begging').relabeled(8,'Drug Peddling').relabeled(9,'Organs Removal').relabeled(10,'Other reasons')
POHTPdf = POHTPt.to_df()
SWPHT = POHTPdf[['Forced Labour','Sexual Exploitation for Prostitution','Domestic Servitude','Forced Marriage','Petty Crimes','Child Pornography','Begging','Drug Peddling','Organs Removal','Other reasons']].sum()
SWPHT = pd.DataFrame(SWPHT)
display_charts(SWPHT , kind='pie', title='Human trafficing in India', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWWVR   = dataRapeVictm.select(1,13)
SWWVRt  = SWWVR.relabeled(1,'Victims rape')
SWWVRdf = SWWVRt.to_df()
SWWVRdfg = SWWVRdf.groupby(['STATE NAME'])[['Victims rape']].sum()
display_charts(SWWVRdfg , kind="bar", title="State wise girls/women victims rape",figsize = (1000, 700))
display_charts(SWWVRdfg , kind='pie', title='Girls / women victims rape', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWKPS    = dataKidnapping.select(1,4)
SWKPSt   = SWKPS.relabeled(1,'Kidnapped')
SWKPSdf  = SWKPSt.to_df()
totkid   = SWKPSdf['Kidnapped'].sum()
SWKPSdf['Kidnap Per'] = SWKPSdf['Kidnapped'].div(totkid).multiply(100)
SWKPSdfg = SWKPSdf.groupby(['STATE NAME'])[['Kidnap Per']].sum()
display_charts(SWKPSdfg , kind='pie', title='State wise kidnaping per share in India', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWKRP  = dataKidnapping.select(1,16)
SWKRPt = SWKRP.relabeled(1,'Kidnaping recovery')
SWKRPdf = SWKRPt.to_df()
SWKRPdfg = SWKRPdf.groupby(['STATE NAME'])[['Kidnaping recovery']].sum()
display_charts(SWKRPdfg , kind="bar", title="State wise kidnaping recovery per",figsize = (1000, 700))
ROCDBJ    = dataJuvenileCrm.select(1,6)
ROCDBJt   = ROCDBJ.relabeled(1,'Juvenile crime rate')
ROCDBJdf  = ROCDBJt.to_df()
ROCDBJdfg = ROCDBJdf.groupby(['STATE NAME'])[['Juvenile crime rate']].sum()
display_charts(ROCDBJdfg, kind="barh", title="State wise juvenile crime rate",figsize = (1000, 700))
SWPSMV    = dataMurderVictm.select(1,10)
SWPSMVt   = SWPSMV.relabeled(1,'Total victims')
SWPSMVdf = SWPSMVt.to_df()
ttlmrder = SWPSMVdf['Total victims'].sum()
SWPSMVdf['Victims per'] = SWPSMVdf['Total victims'].div(ttlmrder).multiply(100)
SWPSMVdfg = SWPSMVdf.groupby(['STATE NAME'])[['Victims per']].sum()
display_charts(SWPSMVdfg , kind='pie', title='State wise per share of murder victims', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
crimedf    = [dataCrime.to_df(),dataVioCrm.to_df(),dataCyberCrm.to_df(),dataChldCrm.to_df(),dataTrafficing.to_df(),dataMissChildren.to_df(),dataRapeVictm.to_df(),dataKidnapping.to_df(),dataJuvenileCrm.to_df(),dataMurderVictm.to_df(),dataCorruption.to_df(),dataCurSeized.to_df(),dataJuvArrest.to_df(),dataMrdrMotive.to_df()]
crimedfCom = reduce(lambda left,right: pd.merge(left,right, on=['STATE NAME']),crimedf)
crimedfCom
JABPI    = dataJuvArrest.select(2,3,4,5)
JABPIt   = JABPI.relabeled(0,'Illiterate').relabeled(1,'Primary education').relabeled(2,'Above Primary Below Matric').relabeled(3,'Matric/HSC & Above')
JABPIdf  = JABPIt.to_df()
JABPIdfg = JABPIdf[['Illiterate','Primary education','Above Primary Below Matric','Matric/HSC & Above']].sum()
JABPIdfg = pd.DataFrame(JABPIdfg)
JABPIdfg = JABPIdfg.rename(columns={0:'Edu Background'})
display_charts(JABPIdfg , kind='pie', title='Juvenile edu background', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
FBJAI    = dataJuvArrest.select(7,8,9)
FBJAIt   = FBJAI.relabeled(0,'Living with parents').relabeled(1,'Living with guardians').relabeled(2,'Homeless')
FBJAIdf  = FBJAIt.to_df()
FBJAIdfg = FBJAIdf[['Living with parents','Living with guardians','Homeless']].sum()
FBJAIdfg = pd.DataFrame(FBJAIdfg)
FBJAIdfg = FBJAIdfg.rename(columns={0:'Family Background'}) 
display_charts(FBJAIdfg , kind='pie', title='Juvenile family background', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
# Manupulating literacy rate
censusLR       = dataDis2011.select(2,'POPULATION','LITERATE')
Literacy_rate  = (censusLR.column(2)/censusLR.column(1))*100
censusLRN      = censusLR.with_column('LITERACY RATE',Literacy_rate).drop(1,2)
censusLRdf     = censusLRN.to_df()
censusLRdf.replace('NCT OF DELHI','DELHI',inplace=True)
censusLRdfg    = censusLRdf.groupby(['STATE NAME'])[['LITERACY RATE']].mean().round(2).reset_index()

# Manupulating crime rate
Crime_rate    = dataCrime.to_df()
Crime_ratedfg = Crime_rate.groupby(['STATE NAME'])[['CRIME RATE']].sum().reset_index()

# Merging both
Litcrmdf  = censusLRdfg.merge(Crime_ratedfg,on=['STATE NAME'])
Litcrmdfg = Litcrmdf.groupby(['STATE NAME'])[['LITERACY RATE','CRIME RATE']].sum()
display_charts(Litcrmdfg , kind="bar", title="State wise Literacy rate vs Crime rate",figsize = (1000, 700))
Litcrmdf2 = Litcrmdf[Litcrmdf['STATE NAME'] !='DELHI']
Litcrmdf2 = Litcrmdf2[Litcrmdf2['STATE NAME'] != 'KERALA']
Litcrmdfg2 = Litcrmdf2.groupby(['STATE NAME'])[['LITERACY RATE','CRIME RATE']].sum()
display_charts(Litcrmdfg2 , kind="bar", title="State wise Literacy rate vs Crime rate",figsize = (1000, 700))
SWVCI    = dataVioCrm.select(1,4,5,6)
SWVCIt   = SWVCI.relabeled(1,'DOWRY DEATHS').relabeled(2,'INFANTICIDE').relabeled(3,'FOETICIDE')
SWVCIdf  = SWVCIt.to_df()
SWVCIdfg = SWVCIdf.groupby(['STATE NAME'])[['DOWRY DEATHS']].sum()
display_charts(SWVCIdfg , kind='pie', title='State wise dowry death percentage', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWFdfg = SWVCIdf.groupby(['STATE NAME'])[['FOETICIDE']].sum()
display_charts(SWFdfg , kind='pie', title='State wise foeticide per in India', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWIdfg = SWVCIdf.groupby(['STATE NAME'])[['INFANTICIDE']].sum()
display_charts(SWIdfg , kind='pie', title='State wise infanticide percentage', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWCCP    = dataCorruption.select(1,5)
SWCCPt   = SWCCP.relabeled(1,'Corruption cases')
SWCCPdf  = SWCCPt.to_df()
SWCCPdfg = SWCCPdf.groupby(['STATE NAME'])[['Corruption cases']].sum()
display_charts(SWCCPdfg  , kind='pie', title='State wise corruption cases in India', tooltip={'pointFormat': '{series.name}: <b>{point.percentage:.1f}%</b>'})
SWACS = dataCurSeized.select(1,12)
SWACSdf = SWACS.to_df()
SWACSdfg = SWACSdf.groupby(['STATE NAME'])[['TOTAL VALUE (IN RS.)']].sum()
display_charts(SWACSdfg , kind="bar", title="State wise currency seized in India",figsize = (1000, 700))
# Manupulating district data
dataDis2011 = dataDis2011.to_df()
dataDis2011.columns = map(str.upper, dataDis2011.columns)
dataDis2011['DISTRICT NAME'] = dataDis2011['DISTRICT NAME'].str.upper()
dataDis2011.replace('NCT OF DELHI','DELHI',inplace=True)
dataDis2011.replace('ORISSA','ODISHA',inplace=True)
dataDisByState = dataDis2011.groupby(['STATE NAME'])[dataDis2011.columns.values].sum().reset_index()

# Merging socio data by crime data at state level
dataSocCrm = dataDisByState.merge(crimedfCom,on=['STATE NAME'])
dataSocCrm
dataSocCrm['FEMALE LIT RATE'] = (dataSocCrm['FEMALE_LITERATE']/dataSocCrm['FEMALE'])*100
felfoe   = dataSocCrm[['STATE NAME','VIOLENT (FOETICIDE)','FEMALE LIT RATE']]
felfoedf = felfoe.groupby(['STATE NAME'])[['FEMALE LIT RATE','VIOLENT (FOETICIDE)']].sum().rename(columns={'VIOLENT (FOETICIDE)':'FOETICIDE'}).round(2)
display_charts(felfoedf , kind="bar", title="State wise female literacy and foeticide in India",figsize = (1000, 700))