import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
df = pd.read_csv('../input/stages_TDF.csv')
df.info()
df.head()
plt.figure(figsize=(9,6))
sns.heatmap(df.isnull(),cmap='summer',yticklabels=False,cbar=False)
plt.title('Missing Data?',fontsize=20)
plt.xticks(fontsize=15,rotation=90)
#plt.xticks(fontsize=10)
plt.show()
#df.isnull()
df[df['Winner_Country'].isnull()].head(10)
df['Date'] = pd.to_datetime(df['Date'])
df['Year'] = df['Date'].map(lambda x: x.year)
df.duplicated().value_counts()
df['Date'].duplicated().value_counts()
df[df['Date']=='1991-07-07']
df['Type'].value_counts()
df['DistanceInMiles'] = df['Distance'].apply(lambda x: x*.62)
df['Type'].value_counts()
def changeStageNames(x):
    
    plainsList = ['Plain stage', 'Flat Stage','Flat cobblestone stage','Plain stage with cobblestones']
    mountainsList = ['Stage with mountain(s)','High mountain stage','Medium mountain stage','Stage with mountain','Mountain Stage']
    
    if x in plainsList:
        return 'Flat stage'
    if x in mountainsList:
        return 'Mountain stage'
    else:
        return x
df['Type'] = df['Type'].apply(changeStageNames)
df['Type'].value_counts()
df[df['Winner']=='Alberto Contador']
df[df['Winner']=='Alberto Contador[n 1]']
df[df['Winner']=='Jan Ullrich'].head(5)
df[df['Winner']=='Jan Ullrich[n 1]']
df[df['Winner']=='Lance Armstrong']
df[df['Winner']=='Lance Armstrong[n 1]'].head(5)
def lanceArmstrong(x):
    if x == 'Lance Armstrong[n 1]':
        return 'Lance Armstrong'
    return x
df['Winner'] = df['Winner'].apply(lanceArmstrong)
df['Winner'].value_counts().head(10)
pre1970 = df[df['Year']<=1970]
post1970 = df[df['Year']>=1970]
post2000 = df[df['Year']>=2000]
post2010 = df[df['Year']>=2010]
plt.figure(figsize=(9,6))
pre1970['Winner_Country'].value_counts().head(15).plot('bar')
plt.title('Stage Winners by Country Origin (Pre 1970)',fontsize=20)
plt.xticks(fontsize=12,rotation=90)
plt.show()
print('Stage Winners by Country Origin\n')
print(pre1970['Winner_Country'].value_counts().head(15))
plt.figure(figsize=(9,6))
post1970['Winner_Country'].value_counts().head(15).plot('bar')
plt.title('Stage Winners by Country Origin (Year 1970 and Beyond)',fontsize=20)
plt.xticks(fontsize=12,rotation=0)
plt.show()
print('Stage Winners by Country Origin\n')
print(post1970['Winner_Country'].value_counts().head(15))
plt.figure(figsize=(9,6))
post2000['Winner_Country'].value_counts().head(15).plot('bar')
plt.title('Stage Winners by Country Origin (Year 2000 and Beyond)',fontsize=20)
plt.xticks(fontsize=12,rotation=0)
plt.show()
print('Stage Winners by Country Origin\n')
print(post2000['Winner_Country'].value_counts().head(15))
plt.figure(figsize=(9,6))
post2010['Winner_Country'].value_counts().head(15).plot('bar')
plt.title('Stage Winners by Country Origin (Year 2010 and Beyond)',fontsize=20)
plt.xticks(fontsize=12,rotation=0)
plt.show()
print('Stage Winners by Country Origin\n')
print(post2010['Winner_Country'].value_counts().head(15))
df[df['Winner_Country']=='FRG']['Year'].value_counts()
df[df['Winner_Country']=='COL']['Type'].value_counts()
plt.figure(figsize=(9,6))
df['Destination'].value_counts().head(20).plot(kind='bar',color='green')
plt.xlabel('Destinations',fontsize=16)
plt.ylabel('Count',fontsize=16)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.title('Count of Destinations',fontsize=20)
plt.show()
print(df['Destination'].value_counts().head(20))
plt.figure(figsize=(9,6))
df['Origin'].value_counts().head(20).plot(kind='bar',color='purple')
plt.xlabel('Origin',fontsize=16)
plt.ylabel('Count',fontsize=16)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.title('Count of Origins',fontsize=20)
plt.show()
print(df['Destination'].value_counts().head(20))
plt.figure(figsize=(20,8))
df.groupby('Year').count()['Type'].plot(kind='bar')
plt.title('Number of Stages by Year',fontsize=20)
plt.xticks(fontsize=12)
plt.yticks(fontsize=16)
plt.show()
plt.figure(figsize=(20,8))
df.groupby('Year')['DistanceInMiles'].sum().plot(kind='bar')
plt.title('Total Miles Ridden per Tour',fontsize=20)
plt.yticks(fontsize=18)
plt.ylabel('Distance in Miles',fontsize=18)
plt.xticks(fontsize=12)
plt.xlabel('Year',fontsize=18)
plt.show()
plt.figure(figsize=(20,8))
df.groupby('Year')['DistanceInMiles'].mean().plot(kind='bar')
plt.title('Average Miles Ridden per Day per Tour',fontsize=20)
plt.yticks(fontsize=18)
plt.ylabel('Distance in Miles',fontsize=18)
plt.xticks(fontsize=12)
plt.xlabel('Year',fontsize=18)
plt.show()
plt.figure(figsize=(9,6))
sns.distplot(df['DistanceInMiles'],hist=True)
plt.title('Histogram of Tour de France Course Distance in Miles',fontsize=20)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.xlabel('Distance in Miles',fontsize=12)
plt.show()
print('The median distance of a Tour de France race course is ' + str(df['DistanceInMiles'].median()) + ' miles.')
print('The shortest distance of a Tour de France race course was ' + str(df['DistanceInMiles'].min()) + ' miles.')
print('The longest distance of a Tour de France race course was ' + str(df['DistanceInMiles'].max()) + ' miles.')
plt.figure(figsize=(9,6))
df['Type'].value_counts().plot('bar')
plt.title('Stage Types',fontsize=20)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.show()
df['Winner'].value_counts().head(5)
plt.figure(figsize=(12,6))
sns.countplot(data=df[df['Winner']=='Eddy Merckx'],x='Year',hue='Type')
plt.title('Eddy Merckx Wins by Stage Type',fontsize=20)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.xlabel('Year',fontsize=16)
plt.ylabel('Wins',fontsize=16)
plt.legend(loc=1)
plt.show()
df[df['Winner']=='Eddy Merckx'].groupby('Year').count()['Winner']
plt.figure(figsize=(12,6))
sns.countplot(data=df[df['Winner']=='Mark Cavendish'],x='Year',hue='Type')
plt.title('Mark Cavendish Wins by Stage Type',fontsize=20)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.xlabel('Year',fontsize=16)
plt.ylabel('Wins',fontsize=16)
plt.legend(loc=1)
plt.show()
df[df['Winner']=='Mark Cavendish'].groupby('Year').count()['Winner']
plt.figure(figsize=(12,6))
sns.countplot(data=df[df['Winner']=='Bernard Hinault'],x='Year',hue='Type')
plt.title('Bernard Hinault Wins by Stage Type',fontsize=20)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.xlabel('Year',fontsize=16)
plt.ylabel('Wins',fontsize=16)
plt.legend(loc=1)
plt.show()
df[df['Winner']=='Bernard Hinault'].groupby('Year').count()['Winner']
plt.figure(figsize=(12,6))
sns.countplot(data=df[df['Winner']=='André Leducq'],x='Year',hue='Type')
plt.title('André Leducq Wins by Stage Type',fontsize=20)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.xlabel('Year',fontsize=16)
plt.ylabel('Wins',fontsize=16)
plt.legend(loc=1)
plt.show()
df[df['Winner']=='André Leducq'].groupby('Year').count()['Winner']
plt.figure(figsize=(12,6))
sns.countplot(data=df[df['Winner']=='Lance Armstrong'],x='Year',hue='Type')
plt.title('Lance Armstrong Wins by Stage Type',fontsize=20)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.xlabel('Year',fontsize=16)
plt.ylabel('Wins',fontsize=16)
plt.legend(loc=2)
plt.show()
df[df['Winner']=='Lance Armstrong'].groupby('Year').count()['Winner']