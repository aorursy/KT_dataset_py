#Importing libraries:
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
print('LibrarieS Imported')
#Importing datasets:
p1_GenData=pd.read_csv('../input/solar-power-generation-data/Plant_1_Generation_Data.csv')
p1_WeathData=pd.read_csv('../input/solar-power-generation-data/Plant_1_Weather_Sensor_Data.csv')
p2_GenData=pd.read_csv('../input/solar-power-generation-data/Plant_2_Generation_Data.csv')
p2_WeathData=pd.read_csv('../input/solar-power-generation-data/Plant_2_Weather_Sensor_Data.csv')
print('Datasets Imported')
print(p1_GenData.columns)
print(p1_WeathData.columns)
print(p2_GenData.columns)
print(p2_WeathData.columns)
print(p1_GenData.shape)
print(p1_WeathData.shape)
print(p2_GenData.shape)
print(p2_WeathData.shape)
print('p1_GenData:',p1_GenData.info())
print('\n','p1_WeathData:', p1_WeathData.info())
print('\n','p2_GenData:',p2_GenData.info())
print('\n','p2_WeathData:',p2_WeathData.info())
#Comparing AC/DC power distributionbetween plant 1 and plant 2 with the help of lineplot:
p1_GenData[['DC_POWER','AC_POWER']].plot(figsize=(25,7), grid=True)
plt.xlabel('Time', fontsize=15)
plt.ylabel('DC_POWER/AC_POWER', fontsize=15)
plt.title('AC/DC Distribution of Plant1 W.R. to Time',fontsize=20)
p2_GenData[['DC_POWER','AC_POWER']].plot(figsize=(25,7), grid=True)
plt.xlabel('Time', fontsize=15)
plt.ylabel('DC_POWER/AC_POWER', fontsize=15)
plt.title('AC/DC Distribution of Plant2 W.R. to Time',fontsize=20)
plt.figure()
p1_GenData[['DAILY_YIELD','TOTAL_YIELD']].plot(figsize=(25,6), grid=True, alpha=0.5)
plt.xlabel('Time', fontsize=15)
plt.ylabel('DAILY/TOTAL YIELD', fontsize=15)
plt.title('DAILY/TOTAL Yield Distribution of Plant1 W.R. to Time',fontsize=20)
plt.show()
p2_GenData[['DAILY_YIELD','TOTAL_YIELD']].plot(figsize=(25,6), grid=True, alpha=0.5)
plt.xlabel('Time', fontsize=15)
plt.ylabel('DAILY/TOTAL YIELD', fontsize=15)
plt.title('DAILY/TOTAL Yield Distribution of Plant2 W.R. to Time',fontsize=20)
p1_WeathData[['AMBIENT_TEMPERATURE','MODULE_TEMPERATURE']].plot(figsize=(25,10), grid=True, marker='*')
plt.xlabel('TIME', fontsize=15)
plt.ylabel('AMBIENT/MODULE TEMPERATURE', fontsize=15)
plt.title('AMBIENT/MODULE TEMPERATURE DISTRIBUTION OF PLANT1 W.R TO TIME', fontsize=20)
p2_WeathData[['AMBIENT_TEMPERATURE','MODULE_TEMPERATURE']].plot(figsize=(25,10), grid=True, marker='*')
plt.xlabel('TIME', fontsize=15)
plt.ylabel('AMBIENT/MODULE TEMPERATURE', fontsize=15)
plt.title('AMBIENT/MODULE TEMPERATURE DISTRIBUTION OF PLANT2 W.R TO TIME',fontsize=20)
#Merging 
Dataframe_weather=pd.merge(p1_WeathData[['DATE_TIME', 'AMBIENT_TEMPERATURE','MODULE_TEMPERATURE', 'IRRADIATION']],p2_WeathData,on='DATE_TIME')
Dataframe_weather=Dataframe_weather.drop(Dataframe_weather[['PLANT_ID','SOURCE_KEY']],axis=1)
Dataframe_weather.plot(figsize=(25,10))
plt.xlabel('TIME',fontsize=20)
plt.title('SENSOR DATA DISTRIBUTION W.R TO TIME', fontsize=20)

