import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import roc_auc_score
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
import numpy as np
import seaborn as sns
from matplotlib import pyplot as plt
import sklearn
from sklearn import linear_model
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from math import sqrt
from sklearn.model_selection import cross_val_score
from patsy import dmatrices
df_train = pd.read_csv('../input/wecrec2020/Train_data.csv')
df_test = pd.read_csv('../input/wecrec2020/Test_data.csv')
df_train=df_train.rename(columns={'O/P':'OutPut'},inplace=False)
df_test.head()
df_train.head()
test_index=df_test['Unnamed: 0']
df_train.drop(['F1', 'F2'], axis = 1, inplace = True)
plt.figure(figsize=(10,10))
plt.subplot(221)
plt.title('F3')
plt.ylabel('OutPut')
plt.xlabel('F3')
plt.scatter(df_train.loc[:,'F3'],df_train.loc[:,'OutPut'])
plt.subplot(222)
plt.title('F4')
plt.ylabel('OutPut')
plt.xlabel('F4')
plt.scatter(df_train.loc[:,'F4'],df_train.loc[:,'OutPut'])
plt.subplot(223)
plt.title('F5')
plt.ylabel('OutPut')
plt.xlabel('F5')
plt.scatter(df_train.loc[:,'F5'],df_train.loc[:,'OutPut'])
plt.subplot(224)
plt.title('F6')
plt.ylabel('OutPut')
plt.xlabel('F6')
plt.scatter(df_train.loc[:,'F6'],df_train.loc[:,'OutPut'])
plt.show()
plt.figure(figsize=(10,10))
plt.subplot(221)
plt.title('F7')
plt.ylabel('OutPut')
plt.xlabel('F7')
plt.scatter(df_train.loc[:,'F7'],df_train.loc[:,'OutPut'])
plt.subplot(222)
plt.title('F8')
plt.ylabel('OutPut')
plt.xlabel('F8')
plt.scatter(df_train.loc[:,'F8'],df_train.loc[:,'OutPut'])
plt.subplot(223)
plt.title('F9')
plt.ylabel('OutPut')
plt.xlabel('F9')
plt.scatter(df_train.loc[:,'F9'],df_train.loc[:,'OutPut'])
plt.subplot(224)
plt.title('F10')
plt.ylabel('OutPut')
plt.xlabel('F10')
plt.scatter(df_train.loc[:,'F10'],df_train.loc[:,'OutPut'])
plt.show()
plt.figure(figsize=(10,10))
plt.subplot(221)
plt.title('F11')
plt.ylabel('OutPut')
plt.xlabel('F11')
plt.scatter(df_train.loc[:,'F11'],df_train.loc[:,'OutPut'])
plt.subplot(222)
plt.title('F12')
plt.ylabel('OutPut')
plt.xlabel('F12')
plt.scatter(df_train.loc[:,'F12'],df_train.loc[:,'OutPut'])
plt.subplot(223)
plt.title('F13')
plt.ylabel('OutPut')
plt.xlabel('F13')
plt.scatter(df_train.loc[:,'F13'],df_train.loc[:,'OutPut'])
plt.subplot(224)
plt.title('F14')
plt.ylabel('OutPut')
plt.xlabel('F14')
plt.scatter(df_train.loc[:,'F14'],df_train.loc[:,'OutPut'])
plt.show()
plt.figure(figsize=(10,10))
plt.subplot(221)
plt.title('F15')
plt.ylabel('OutPut')
plt.xlabel('F15')
plt.scatter(df_train.loc[:,'F15'],df_train.loc[:,'OutPut'])
plt.subplot(222)
plt.title('F16')
plt.ylabel('OutPut')
plt.xlabel('F16')
plt.scatter(df_train.loc[:,'F16'],df_train.loc[:,'OutPut'])
plt.subplot(223)
plt.title('F17')
plt.ylabel('OutPut')
plt.xlabel('F17')
plt.scatter(df_train.loc[:,'F17'],df_train.loc[:,'OutPut'])
plt.show()
train_X = df_train.loc[:, 'F3':'F17']
train_y = df_train.loc[:, 'OutPut']
rf = RandomForestRegressor(n_estimators=31, random_state=41)
rf.fit(train_X, train_y)
df_test = df_test.loc[:, 'F3':'F17']
pred = rf.predict(df_test)
print(pred)
result=pd.DataFrame()
result['Id'] = test_index
result['PredictedValue'] = pd.DataFrame(pred)
result.to_csv('final_submission.csv',index=False)
da=pd.read_csv('final_submission.csv')
da.head()