import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
data=pd.read_csv("../input/Malware dataset.csv")
data.head()
data.shape
data.isnull().sum()
data.columns
data1=data.dropna(how="any",axis=0)
data1.head()
data1["classification"].value_counts()
data1['classification'] = data1.classification.map({'benign':0, 'malware':1})
data1.head()
data1.tail()
sns.countplot(data1["classification"])
plt.show()
data1["classification"].value_counts().plot(kind="pie",autopct="%1.1f%%")
plt.axis("equal")
plt.show()
benign1=data.loc[data['classification']=='benign']
benign1["classification"].head()
malware1=data.loc[data['classification']=='malware']
malware1["classification"].head()
corr=data1.corr()
corr.nlargest(35,'classification')["classification"]
x=data1.drop(["hash","classification",'vm_truncate_count','shared_vm','exec_vm','nvcsw','maj_flt','utime'],axis=1)
x.head()
y=data1["classification"]
y
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=1)
from sklearn.naive_bayes import GaussianNB
model=GaussianNB()
model.fit(x_train,y_train)
pred=model.predict(x_test)
pred
model.score(x_test,y_test)
result=pd.DataFrame({
    "Actual_Value":y_test,
    "Predict_Value":pred
})
result

