import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
plt.style.use('fivethirtyeight')
df = pd.read_csv('../input/comptab_2018-01-29 16_00_comma_separated.csv', delimiter=',')
df.head()
df.info()
birds = df[df['Class'] == 'Aves']
birds.head()
birds.info()
birds = birds.drop(['Origin', 'Importer reported quantity', 'Exporter reported quantity', 'Unit'], axis=1)
f, ax = plt.subplots(1, figsize=(6,4))
sns.countplot(birds.Year, ax=ax)
print(birds.Year.value_counts())
plt.figure(figsize=(12,7))
sns.countplot(birds['App.'])
f, ax = plt.subplots(2, figsize=(12,14))
sns.countplot(birds.Source, ax=ax[0])
sns.countplot(birds.Purpose, ax=ax[1])
print(birds.Source.value_counts())
print(birds.Purpose.value_counts())
x = birds[birds['Source'] == 'C']
y = birds[birds['Source'] == 'W']
z = birds[birds['Source'] == 'F']
temp = x.merge(y, how='outer')
top_source = temp.merge(z, how='outer')
plt.figure(figsize=(12,7))
sns.countplot(top_source.Purpose, hue=top_source.Source)
chk_lst = ['Importer', 'Exporter']
for name in chk_lst:
    print(name)
    print(birds[name].unique())
birds_importer = birds.Importer.value_counts(normalize=True)
plt.figure(figsize=(12,7))
birds_importer.head(10).plot('bar')
plt.xticks(rotation=0)
plt.xlabel('Importer')
plt.ylabel('Normalized Count')
plt.title('Top 10 Importers')
print('Top 10 countries contributed to {:0.3f}% of imports.'.format(birds_importer.head(10).sum()*100))
birds_US_import = birds[birds['Importer'] == 'US']
f, ax = plt.subplots(2,2,figsize=(15,16))
birds_US_import.Term.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Term')
birds_US_import.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=0, title='Purpose')
birds_US_import.Source.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Source')
birds_US_import.Family.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Family')
birds_AE_import = birds[birds['Importer'] == 'AE']
f, ax = plt.subplots(2,2,figsize=(15,16))
birds_AE_import.Term.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Term')
birds_AE_import.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=0, title='Purpose')
birds_AE_import.Source.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Source')
birds_AE_import.Family.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Family')
birds_JP_import = birds[birds['Importer'] == 'JP']
f, ax = plt.subplots(2,2,figsize=(15,16))
birds_JP_import.Term.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Term')
birds_JP_import.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=0, title='Purpose')
birds_JP_import.Source.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Source')
birds_JP_import.Family.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Family')
birds_exporter = birds.Exporter.value_counts(normalize=True)
plt.figure(figsize=(12,7))
birds_exporter.head(10).plot('bar')
plt.xticks(rotation=0)
plt.xlabel('Exporter')
plt.ylabel('Normalized Count')
plt.title('Top 10 Exporters')
print('Top 10 countries contributed to {:0.3f}% of exports.'.format(birds_exporter.head(10).sum()*100))
birds_US_export = birds[birds['Exporter'] == 'BE']
f, ax = plt.subplots(2,2,figsize=(15,16))
birds_US_export.Term.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Term')
birds_US_export.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=0, title='Purpose')
birds_US_export.Source.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Source')
birds_US_export.Family.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Family')
birds_NL_export = birds[birds['Exporter'] == 'NL']
f, ax = plt.subplots(2,2,figsize=(15,16))
birds_NL_export.Term.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Term')
birds_NL_export.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=0, title='Purpose')
birds_NL_export.Source.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Source')
birds_NL_export.Family.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Family')
birds_AE_export = birds[birds['Exporter'] == 'AE']
f, ax = plt.subplots(2,2,figsize=(15,16))
birds_AE_export.Term.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Term')
birds_AE_export.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=0, title='Purpose')
birds_AE_export.Source.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Source')
birds_AE_export.Family.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Family')
exp = birds_exporter.head(10)
imp = birds_importer.head(10)
exp_imp = pd.concat([imp, exp], axis=1)
exp_imp = exp_imp.dropna()
exp_imp = exp_imp.reset_index()
plt.figure(figsize=(12,7))
plt.bar(exp_imp['index'], exp_imp.Importer, align='edge', width=0.2, label='imports')
plt.bar(exp_imp['index'], exp_imp.Exporter, align='edge', width=-0.2, label='exports')
plt.xticks(rotation=0)
plt.legend(loc='best')
plt.xlabel('Country')
plt.ylabel('Normalized Count')
plt.title('Countries with high values of imports and exports')
chk_lst = ['Taxon', 'Order', 'Family', 'Genus']
for name in chk_lst:
    print(name)
    print(birds[name].unique())
birds_taxon = birds.Taxon.value_counts(normalize=True)
plt.figure(figsize=(12,7))
birds_taxon.head(10).plot('bar')
plt.xticks(rotation=90)
plt.xlabel('Taxon')
plt.ylabel('Normalized Count')
plt.title('Trade by Taxon')
print('Top 10 values contributed to {:0.3f}% of trade.'.format(birds_taxon.head(10).sum()*100))
birds_order = birds.Order.value_counts(normalize=True)
plt.figure(figsize=(12,7))
birds_order.head(10).plot('bar')
plt.xticks(rotation=30)
plt.xlabel('Order')
plt.ylabel('Normalized Count')
plt.title('Trade by Order')
print('Top 10 values contributed to {:0.3f}% of trade.'.format(birds_order.head(10).sum()*100))
birds_family = birds.Family.value_counts(normalize=True)
plt.figure(figsize=(12,7))
birds_family.head(10).plot('bar')
plt.xticks(rotation=30)
plt.xlabel('Family')
plt.ylabel('Normalized Count')
plt.title('Trade by Family')
print('Top 10 values contributed to {:0.3f}% of trade.'.format(birds_family.head(10).sum()*100))
birds_family = birds[birds['Family'] == 'Psittacidae']
f, ax = plt.subplots(1,2, figsize=(15,7))
birds_family.Taxon.value_counts(normalize=True).head().plot('bar', ax=ax[0,], rot=30, title='Taxon')
birds_family.Genus.value_counts(normalize=True).head().plot('bar', ax=ax[1,], rot=30, title='Genus')
birds_family = birds[birds['Family'] == 'Psittacidae']
f, ax = plt.subplots(2,2,figsize=(15,12))
birds_family.Importer.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Importer')
birds_family.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=0, title='Purpose')
birds_family.Exporter.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Exporter')
birds_family.Source.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=30, title='Source')
birds_family = birds[birds['Family'] == 'Falconidae']
f, ax = plt.subplots(1,2, figsize=(15,7))
birds_family.Taxon.value_counts(normalize=True).head().plot('bar', ax=ax[0,], rot=30, title='Taxon')
birds_family.Genus.value_counts(normalize=True).head().plot('bar', ax=ax[1,], rot=20, title='Genus')
birds_family = birds[birds['Family'] == 'Falconidae']
f, ax = plt.subplots(2,2,figsize=(15,12))
birds_family.Importer.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Importer')
birds_family.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=0, title='Purpose')
birds_family.Exporter.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Exporter')
birds_family.Source.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=30, title='Source')
birds_genus = birds.Genus.value_counts(normalize=True)
plt.figure(figsize=(12,7))
birds_genus.head(10).plot('bar')
plt.xticks(rotation=30)
plt.xlabel('Genus')
plt.ylabel('Normalized Count')
plt.title('Trade by Genus')
print('Top 10 values contributed to {:0.3f}% of trade.'.format(birds_genus.head(10).sum()*100))
plt.figure(figsize=(12,7))
birds.Term.value_counts(normalize=True).head(10).plot('bar')
plt.xticks(rotation=30)
plt.xlabel('Term,')
plt.ylabel('Normalized Count')
plt.title('Trade by Term')
birds_term = birds[birds['Term'] == 'live']
f, ax = plt.subplots(3,2,figsize=(15,25))
birds_term.Importer.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Importer')
birds_term.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[2,0], rot=30, title='Purpose')
birds_term.Order.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Order')
birds_term.Family.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=30, title='Family')
birds_term.Exporter.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Exporter')
birds_term.Source.value_counts(normalize=True).head().plot('bar', ax=ax[2,1], rot=30, title='Source')
birds_term = birds[birds['Term'] == 'feathers']
f, ax = plt.subplots(3,2,figsize=(15,25))
birds_term.Importer.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Importer')
birds_term.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[2,0], rot=30, title='Purpose')
birds_term.Order.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Order')
birds_term.Family.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=30, title='Family')
birds_term.Exporter.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Exporter')
birds_term.Source.value_counts(normalize=True).head().plot('bar', ax=ax[2,1], rot=30, title='Source')
birds_term = birds[birds['Term'] == 'specimens']
f, ax = plt.subplots(3,2,figsize=(15,25))
birds_term.Importer.value_counts(normalize=True).head().plot('bar', ax=ax[0,0], rot=20, title='Importer')
birds_term.Purpose.value_counts(normalize=True).head().plot('bar', ax=ax[2,0], rot=30, title='Purpose')
birds_term.Order.value_counts(normalize=True).head().plot('bar', ax=ax[1,0], rot=30, title='Order')
birds_term.Family.value_counts(normalize=True).head().plot('bar', ax=ax[1,1], rot=30, title='Family')
birds_term.Exporter.value_counts(normalize=True).head().plot('bar', ax=ax[0,1], rot=30, title='Exporter')
birds_term.Source.value_counts(normalize=True).head().plot('bar', ax=ax[2,1], rot=30, title='Source')