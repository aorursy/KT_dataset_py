#import packages
import csv
import igraph as ig
import pandas as pd
import random
import matplotlib.pyplot as plt
%matplotlib inline
#import dataset
Network_NYC = ig.Graph.Read_Ncol("edgeNYC.txt", directed = False)
Network_NYC2 = ig.Graph.Read_Ncol("edgeNYC.txt", directed = False)
clusters = pd.read_csv('NYC_clustering_output_sorted.csv')
del clusters['node']
clusters = clusters.label.tolist()
print('The unique values of clusters:')
set(clusters)
#pair labels for each node
cluster_0 = []
cluster_1 = []
cluster_2 = []
cluster_3 = []
for ids, k in enumerate(clusters):
    if k == 0:
        cluster_0.append(ids)
    elif k == 1:
        cluster_1.append(ids)
    elif k == 2:
        cluster_2.append(ids)
    else:
        cluster_3.append(ids)
cluster_0 = cluster_0[:50]
cluster_1 = cluster_1[:80]
cluster_2 = cluster_2[:20]
ecount = Network_NYC.ecount()#edges
vcount = Network_NYC.vcount()#nodes
list_vs_random = []
for v in range(vcount):
    list_vs_random.append(v)
delete_list = []
for d in range(len(cluster_0)):
    d = d/vcount
    delete_list.append(d)
diameter_list = []
for i,inx in enumerate(delete_list):
    sample = random.sample(list_vs_random, vcount-i)
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in sample])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC, Network_NYC_sample_vs)
    Network_NYC_sample_diameter = Network_NYC_sample.diameter()
    diameter_list.append(Network_NYC_sample_diameter)
density_list = []
for i,inx in enumerate(delete_list):
    sample = random.sample(list_vs_random, vcount-i)
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in sample])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC, Network_NYC_sample_vs)
    Network_NYC_sample_density = Network_NYC_sample.density()
    density_list.append(Network_NYC_sample_density)
print('-------------------------------------------')
print("Figure: Random Deletion on NYC's Subway Network")
print('-------------------------------------------')
plt.subplot(211)
plt.title('Deletion Influence')
plt.xlabel('Fraction of deleted node')
plt.ylabel('Diameter')
plt.plot(delete_list,diameter_list,linestyle='--', marker='o')
plt.subplot(212)
plt.xlabel('Fraction of deleted node')
plt.ylabel('Density')
plt.plot(delete_list,density_list,linestyle='--', marker='o')
plt.show()
ecount = Network_NYC.ecount()#edges
vcount = Network_NYC.vcount()#nodes
list_vs = []
list_vs_1 = []
for v in range(vcount):
    list_vs.append(v)
for v in cluster_0:
    list_vs_1.append(v)
diameter_list = []
for i in list_vs_1:
    list_vs.remove(i)
    remaining_nodes = list_vs
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in remaining_nodes])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC,Network_NYC_sample_vs)
    Network_NYC_sample_diameter = Network_NYC_sample.diameter()
    diameter_list.append(Network_NYC_sample_diameter)
list_vs2 = []
list_vs_2 = []
for v in range(vcount):
    list_vs2.append(v)
for v in cluster_0:
    list_vs_2.append(v)
density_list = []
for i in list_vs_2:
    list_vs2.remove(i)
    remaining_nodes2 = list_vs2
    Network_NYC2_sample_vs = Network_NYC2.vs.select([v.index for v in Network_NYC2.vs if v.index in remaining_nodes2])
    Network_NYC2_sample = ig.Graph.subgraph(Network_NYC2,Network_NYC2_sample_vs)
    Network_NYC2_sample_density = Network_NYC2_sample.density()
    density_list.append(Network_NYC2_sample_density)
num_node = range(len(cluster_0))
print('-------------------------------------------')
print("Figure: Targeted Deletion on NYC's Subway Network")
print('-------------------------------------------')
plt.subplot(211)
plt.title('Deletion Influence')
plt.xlabel('Fraction of deleted node')
plt.ylabel('Diameter')
Diameter = pd.DataFrame({'Nodes_Deleted':num_node,'Diameter':diameter_list})
plt.plot(Diameter['Nodes_Deleted']/Network_NYC.vcount(),Diameter['Diameter'],linestyle='--',marker = 'o')
plt.subplot(212)
plt.xlabel('Fraction of deleted node')
plt.ylabel('Density')
Density = pd.DataFrame({'Nodes_Deleted':num_node,'Density':density_list})
Density = Density.fillna(0)
plt.plot(Density['Nodes_Deleted']/Network_NYC2.vcount(),Density['Density'],linestyle='--',marker = 'o')
plt.show()
num_colors = len(Network_NYC_sample.degree())
palette = ig.GradientPalette('darkblue','skyblue',num_colors)
color_list = []
for i in range(num_colors):
    color_list.append(palette.get(i))
print('------------------------------------------------------')
print("Figure: NYC's Subway Network After Deletion of Class 1")
print('------------------------------------------------------')
ig.plot(Network_NYC_sample,bbox=(400,300),vertex_color = color_list, vertex_size = 5, layout = 'kamada_kawai')
ecount = Network_NYC.ecount()#edges
vcount = Network_NYC.vcount()#nodes
list_vs_random = []
for v in range(vcount):
    list_vs_random.append(v)
delete_list = []
for d in range(len(cluster_2)):
    d = d/vcount
    delete_list.append(d)
diameter_list = []
for i,inx in enumerate(delete_list):
    sample = random.sample(list_vs_random, vcount-i)
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in sample])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC, Network_NYC_sample_vs)
    Network_NYC_sample_diameter = Network_NYC_sample.diameter()
    diameter_list.append(Network_NYC_sample_diameter)
density_list = []
for i,inx in enumerate(delete_list):
    sample = random.sample(list_vs_random, vcount-i)
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in sample])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC, Network_NYC_sample_vs)
    Network_NYC_sample_density = Network_NYC_sample.density()
    density_list.append(Network_NYC_sample_density)
print('-------------------------------------------')
print("Figure: Random Deletion on NYC's Subway Network")
print('-------------------------------------------')
plt.subplot(211)
plt.title('Deletion Influence')
plt.xlabel('Fraction of deleted node')
plt.ylabel('Diameter')
plt.plot(delete_list,diameter_list,linestyle='--', marker='o')
plt.subplot(212)
plt.xlabel('Fraction of deleted node')
plt.ylabel('Density')
plt.plot(delete_list,density_list,linestyle='--', marker='o')
plt.show()
ecount = Network_NYC.ecount()#edges
vcount = Network_NYC.vcount()#nodes
list_vs = []
list_vs_1 = []
for v in range(vcount):
    list_vs.append(v)
for v in cluster_2:
    list_vs_1.append(v)
diameter_list = []
for i in list_vs_1:
    list_vs.remove(i)
    remaining_nodes = list_vs
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in remaining_nodes])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC,Network_NYC_sample_vs)
    Network_NYC_sample_diameter = Network_NYC_sample.diameter()
    diameter_list.append(Network_NYC_sample_diameter)
list_vs2 = []
list_vs_2 = []
for v in range(vcount):
    list_vs2.append(v)
for v in cluster_2:
    list_vs_2.append(v)
density_list = []
for i in list_vs_2:
    list_vs2.remove(i)
    remaining_nodes2 = list_vs2
    Network_NYC2_sample_vs = Network_NYC2.vs.select([v.index for v in Network_NYC2.vs if v.index in remaining_nodes2])
    Network_NYC2_sample = ig.Graph.subgraph(Network_NYC2,Network_NYC2_sample_vs)
    Network_NYC2_sample_density = Network_NYC2_sample.density()
    density_list.append(Network_NYC2_sample_density)
num_node = range(len(cluster_2))
print('-------------------------------------------')
print("Figure: Targeted Deletion on NYC's Subway Network")
print('-------------------------------------------')
plt.subplot(211)
plt.title('Deletion Influence')
plt.xlabel('Fraction of deleted node')
plt.ylabel('Diameter')
Diameter = pd.DataFrame({'Nodes_Deleted':num_node,'Diameter':diameter_list})
plt.plot(Diameter['Nodes_Deleted']/Network_NYC.vcount(),Diameter['Diameter'],linestyle='--',marker = 'o')
plt.subplot(212)
plt.xlabel('Fraction of deleted node')
plt.ylabel('Density')
Density = pd.DataFrame({'Nodes_Deleted':num_node,'Density':density_list})
Density = Density.fillna(0)
plt.plot(Density['Nodes_Deleted']/Network_NYC2.vcount(),Density['Density'],linestyle='--',marker = 'o')
plt.show()
num_colors = len(Network_NYC_sample.degree())
palette = ig.GradientPalette('darkblue','skyblue',num_colors)
color_list = []
for i in range(num_colors):
    color_list.append(palette.get(i))
print('------------------------------------------------------')
print("Figure: NYC's Subway Network After Deletion of Class 2")
print('------------------------------------------------------')
ig.plot(Network_NYC_sample,bbox=(400,300),vertex_color = color_list, vertex_size = 5, layout = 'kamada_kawai')
ecount = Network_NYC.ecount()#edges
vcount = Network_NYC.vcount()#nodes
list_vs_random = []
for v in range(vcount):
    list_vs_random.append(v)
delete_list = []
for d in range(len(cluster_1)):
    d = d/vcount
    delete_list.append(d)
diameter_list = []
for i,inx in enumerate(delete_list):
    sample = random.sample(list_vs_random, vcount-i)
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in sample])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC, Network_NYC_sample_vs)
    Network_NYC_sample_diameter = Network_NYC_sample.diameter()
    diameter_list.append(Network_NYC_sample_diameter)
density_list = []
for i,inx in enumerate(delete_list):
    sample = random.sample(list_vs_random, vcount-i)
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in sample])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC, Network_NYC_sample_vs)
    Network_NYC_sample_density = Network_NYC_sample.density()
    density_list.append(Network_NYC_sample_density)
print('-------------------------------------------')
print("Figure: Random Deletion on NYC's Subway Network")
print('-------------------------------------------')
plt.subplot(211)
plt.title('Deletion Influence')
plt.xlabel('Fraction of deleted node')
plt.ylabel('Diameter')
plt.plot(delete_list,diameter_list,linestyle='--', marker='o')
plt.subplot(212)
plt.xlabel('Fraction of deleted node')
plt.ylabel('Density')
plt.plot(delete_list,density_list,linestyle='--', marker='o')
plt.show()
ecount = Network_NYC.ecount()#edges
vcount = Network_NYC.vcount()#nodes
list_vs = []
list_vs_1 = []
for v in range(vcount):
    list_vs.append(v)
for v in cluster_1:
    list_vs_1.append(v)
diameter_list = []
for i in list_vs_1:
    list_vs.remove(i)
    remaining_nodes = list_vs
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in remaining_nodes])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC,Network_NYC_sample_vs)
    Network_NYC_sample_diameter = Network_NYC_sample.diameter()
    diameter_list.append(Network_NYC_sample_diameter)
list_vs2 = []
list_vs_2 = []
for v in range(vcount):
    list_vs2.append(v)
for v in cluster_1:
    list_vs_2.append(v)
density_list = []
for i in list_vs_2:
    list_vs2.remove(i)
    remaining_nodes2 = list_vs2
    Network_NYC2_sample_vs = Network_NYC2.vs.select([v.index for v in Network_NYC2.vs if v.index in remaining_nodes2])
    Network_NYC2_sample = ig.Graph.subgraph(Network_NYC2,Network_NYC2_sample_vs)
    Network_NYC2_sample_density = Network_NYC2_sample.density()
    density_list.append(Network_NYC2_sample_density)
num_node = range(len(cluster_1))
print('-------------------------------------------')
print("Figure: Targeted Deletion on NYC's Subway Network")
print('-------------------------------------------')
plt.subplot(211)
plt.title('Deletion Influence')
plt.xlabel('Fraction of deleted node')
plt.ylabel('Diameter')
Diameter = pd.DataFrame({'Nodes_Deleted':num_node,'Diameter':diameter_list})
plt.plot(Diameter['Nodes_Deleted']/Network_NYC.vcount(),Diameter['Diameter'],linestyle='--',marker = 'o')
plt.subplot(212)
plt.xlabel('Fraction of deleted node')
plt.ylabel('Density')
Density = pd.DataFrame({'Nodes_Deleted':num_node,'Density':density_list})
Density = Density.fillna(0)
plt.plot(Density['Nodes_Deleted']/Network_NYC2.vcount(),Density['Density'],linestyle='--',marker = 'o')
plt.show()
num_colors = len(Network_NYC_sample.degree())
palette = ig.GradientPalette('darkblue','skyblue',num_colors)
color_list = []
for i in range(num_colors):
    color_list.append(palette.get(i))
print('------------------------------------------------------')
print("Figure: NYC's Subway Network After Deletion of Class 3")
print('------------------------------------------------------')
ig.plot(Network_NYC_sample,bbox=(400,300),vertex_color = color_list, vertex_size = 5, layout = 'kamada_kawai')
ecount = Network_NYC.ecount()#edges
vcount = Network_NYC.vcount()#nodes
list_vs_random = []
for v in range(vcount):
    list_vs_random.append(v)
delete_list = []
for d in range(len(cluster_3)):
    d = d/vcount
    delete_list.append(d)
diameter_list = []
for i,inx in enumerate(delete_list):
    sample = random.sample(list_vs_random, vcount-i)
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in sample])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC, Network_NYC_sample_vs)
    Network_NYC_sample_diameter = Network_NYC_sample.diameter()
    diameter_list.append(Network_NYC_sample_diameter)
density_list = []
for i,inx in enumerate(delete_list):
    sample = random.sample(list_vs_random, vcount-i)
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in sample])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC, Network_NYC_sample_vs)
    Network_NYC_sample_density = Network_NYC_sample.density()
    density_list.append(Network_NYC_sample_density)
print('-------------------------------------------')
print("Figure: Random Deletion on NYC's Subway Network")
print('-------------------------------------------')
plt.subplot(211)
plt.title('Deletion Influence')
plt.xlabel('Fraction of deleted node')
plt.ylabel('Diameter')
plt.plot(delete_list,diameter_list,linestyle='--', marker='o')
plt.subplot(212)
plt.xlabel('Fraction of deleted node')
plt.ylabel('Density')
plt.plot(delete_list,density_list,linestyle='--', marker='o')
plt.show()
ecount = Network_NYC.ecount()#edges
vcount = Network_NYC.vcount()#nodes
list_vs = []
list_vs_1 = []
for v in range(vcount):
    list_vs.append(v)
for v in cluster_3:
    list_vs_1.append(v)
diameter_list = []
for i in list_vs_1:
    list_vs.remove(i)
    remaining_nodes = list_vs
    Network_NYC_sample_vs = Network_NYC.vs.select([v.index for v in Network_NYC.vs if v.index in remaining_nodes])
    Network_NYC_sample = ig.Graph.subgraph(Network_NYC,Network_NYC_sample_vs)
    Network_NYC_sample_diameter = Network_NYC_sample.diameter()
    diameter_list.append(Network_NYC_sample_diameter)
list_vs2 = []
list_vs_2 = []
for v in range(vcount):
    list_vs2.append(v)
for v in cluster_3:
    list_vs_2.append(v)
density_list = []
for i in list_vs_2:
    list_vs2.remove(i)
    remaining_nodes2 = list_vs2
    Network_NYC2_sample_vs = Network_NYC2.vs.select([v.index for v in Network_NYC2.vs if v.index in remaining_nodes2])
    Network_NYC2_sample = ig.Graph.subgraph(Network_NYC2,Network_NYC2_sample_vs)
    Network_NYC2_sample_density = Network_NYC2_sample.density()
    density_list.append(Network_NYC2_sample_density)
num_node = range(len(cluster_3))
print('-------------------------------------------')
print("Figure: Targeted Deletion on NYC's Subway Network")
print('-------------------------------------------')
plt.subplot(211)
plt.title('Deletion Influence')
plt.xlabel('Fraction of deleted node')
plt.ylabel('Diameter')
Diameter = pd.DataFrame({'Nodes_Deleted':num_node,'Diameter':diameter_list})
plt.plot(Diameter['Nodes_Deleted']/Network_NYC.vcount(),Diameter['Diameter'],linestyle='--',marker = 'o')
plt.subplot(212)
plt.xlabel('Fraction of deleted node')
plt.ylabel('Density')
Density = pd.DataFrame({'Nodes_Deleted':num_node,'Density':density_list})
Density = Density.fillna(0)
plt.plot(Density['Nodes_Deleted']/Network_NYC2.vcount(),Density['Density'],linestyle='--',marker = 'o')
plt.show()
num_colors = len(Network_NYC_sample.degree())
palette = ig.GradientPalette('darkblue','skyblue',num_colors)
color_list = []
for i in range(num_colors):
    color_list.append(palette.get(i))
print('------------------------------------------------------')
print("Figure: NYC's Subway Network After Deletion of Class 4")
print('------------------------------------------------------')
ig.plot(Network_NYC_sample,bbox=(400,300),vertex_color = color_list, vertex_size = 5, layout = 'kamada_kawai')
