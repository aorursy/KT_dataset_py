# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load in 

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

import warnings

warnings.filterwarnings('ignore')
# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory

import os
print(os.listdir("../input"))

# Any results you write to the current directory are saved as output.
survey_data = pd.read_csv("../input/survey_results_public.csv")
survey_data.info()
survey_data.describe()
survey_data.head(5)
survey_data.tail(5)
survey_data.shape
len(survey_data)
survey_data.size
survey_schema = pd.read_csv("../input/survey_results_schema.csv")
survey_schema.info()
survey_schema.describe()
survey_schema.head()
survey_data.columns
#How many NA elements in every column
survey_data.isnull().sum()
#Remove all null values
survey_data.dropna().head(2)
#Fill all null values with a space
#survey_data = survey_data.fillna(" ")
#Check once again
survey_data.isnull().sum()
developerType = survey_data['DevType']
developerType.head(5)
countries = survey_data['Country'][:10]
countries
countries[9]
survey_data[['Respondent','LanguageWorkedWith']].head(5)
survey_data.sort_values(['Respondent']).head(5)
country_counts = survey_data['Country'].value_counts()[:10]
country_counts.head(10)
country_counts.plot(kind='bar', figsize=(20,5))
plt.subplots(figsize=(20,20))
sns.countplot('Country', data=survey_data[:10])
f,ax=plt.subplots(1,2,figsize=(15,5))
survey_data['OpenSource'].value_counts().plot.pie(explode=[0,0.1],ax=ax[0],shadow=True)
ax[0].set_title('OpenSource')
ax[0].set_ylabel('')
sns.countplot('OpenSource',data=survey_data,palette="coolwarm",ax=ax[1])
ax[1].set_title('OpenSource')
plt.show()
plt.figure(figsize=(15,7))
colors = ["greyish", "faded green", "dusty purple"]
student_counts = survey_data['Student'].value_counts()
student_counts.plot.barh(color=sns.color_palette("Set1"))
plt.title('Student', fontsize=15)
plt.yticks(fontsize=15)
plt.show()
plt.figure(figsize=(15,7))
temp_devtype = pd.DataFrame(survey_data['DevType'].dropna().str.split(';').tolist()).stack()
temp_devtype_counts = temp_devtype.value_counts().sort_values()
temp_devtype_counts.plot.barh(color=sns.color_palette('pastel',15))
plt.title('DevType', fontsize=15)
plt.yticks(fontsize=18)
plt.show()
plt.figure(figsize=(15,10))
temp_language = pd.DataFrame(survey_data['LanguageWorkedWith'].dropna().str.split(';').tolist()).stack()
temp_language_counts = temp_language.value_counts().sort_values()
temp_language_counts.plot.barh(color=sns.color_palette('pastel',15))
plt.title('Most Popular Languages', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,10))
temp_languagedesirenextyear = pd.DataFrame(survey_data['LanguageDesireNextYear'].dropna().str.split(';').tolist()).stack()
temp_languagedesirenextyear_counts = temp_languagedesirenextyear.value_counts().sort_values()
temp_languagedesirenextyear_counts.plot.barh(color=sns.color_palette('pastel',15))
plt.title('Most Popular Languages for the Next Year', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,7))
temp_framework = pd.DataFrame(survey_data['FrameworkWorkedWith'].dropna().str.split(';').tolist()).stack()
temp_framework_counts = temp_framework.value_counts().sort_values()
temp_framework_counts.plot.barh(color=sns.color_palette('pastel',15))
plt.title('Most Popular Framework', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,7))
temp_frameworkdesirenextyear = pd.DataFrame(survey_data['FrameworkDesireNextYear'].dropna().str.split(';').tolist()).stack()
temp_frameworkdesirenextyear_counts = temp_frameworkdesirenextyear.value_counts().sort_values()
temp_frameworkdesirenextyear_counts.plot.barh(color=sns.color_palette('pastel',15))
plt.title('Most Popular Framework for the Next Year', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,10))
temp_database = pd.DataFrame(survey_data['DatabaseWorkedWith'].dropna().str.split(';').tolist()).stack()
temp_database_counts = temp_database.value_counts().sort_values()
temp_database_counts.plot.barh(color=sns.color_palette("hls", 8))
plt.title('Most Popular Database', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,10))
temp_ide = pd.DataFrame(survey_data['IDE'].dropna().str.split(';').tolist()).stack()
temp_ide_counts = temp_ide.value_counts().sort_values()
temp_ide_counts.plot.barh(color=sns.color_palette("pastel", 15))
plt.title('Most Popular IDE', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,10))
temp_platform = pd.DataFrame(survey_data['PlatformWorkedWith'].dropna().str.split(';').tolist()).stack()
temp_platform_counts = temp_platform.value_counts().sort_values()
temp_platform_counts.plot.barh(width=0.9,color=sns.color_palette("hls"))
plt.title('Most Popular Platform', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,10))
temp_platform = pd.DataFrame(survey_data['PlatformDesireNextYear'].dropna().str.split(';').tolist()).stack()
temp_platform_counts = temp_platform.value_counts().sort_values()
temp_platform_counts.plot.barh(width=0.9,color=sns.color_palette("hls"))
plt.title('Most Desire Platform for the Next Year', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,10))
temp_yearexp = pd.DataFrame(survey_data['YearsCodingProf'].dropna().str.split(';').tolist()).stack()
temp_yearexp_counts = temp_yearexp.value_counts().sort_values()
temp_yearexp_counts.plot.barh(color=sns.color_palette("pastel", 15))
plt.title('Year Of Coding Professional Exp', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,10))
temp_communicationtools = pd.DataFrame(survey_data['CommunicationTools'].dropna().str.split(';').tolist()).stack()
temp_communicationtools_counts = temp_communicationtools.value_counts().sort_values()
temp_communicationtools_counts.plot.barh(width=0.9,color=sns.color_palette("hls", 8))
plt.title('Top 10 Most Popular Communication Tools', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(15,10))
temp_educationtype = pd.DataFrame(survey_data['EducationTypes'].dropna().str.split(';').tolist()).stack()
temp_educationtype_counts = temp_educationtype.value_counts().sort_values()
temp_educationtype_counts.plot.barh(color=sns.color_palette("hls", 8))
plt.title('Most Education Types', fontsize=15)
plt.yticks(fontsize=12)
plt.show()
plt.figure(figsize=(7,7))
g=sns.countplot(y=survey_data['UndergradMajor'],order=survey_data['UndergradMajor'].value_counts().index,palette=sns.color_palette('hls'))
g.set_title('Formal Undergraduate Education',fontsize=16)
g.set_xlabel('Education')
plt.show()
survey_jobsatisfaction = survey_data['JobSatisfaction'].dropna()
survey_jobsatisfaction_counts = survey_jobsatisfaction.value_counts()
fig1, ax1 = plt.subplots()
ax1.pie(survey_jobsatisfaction_counts, autopct='%1.1f%%', shadow=True)
ax1.axis('equal')
ax1.legend(survey_data['JobSatisfaction'], bbox_to_anchor=(1.1, 1.05))
plt.show()
plt.figure(figsize=(15,8))
g=sns.countplot(x=survey_data['YearsCoding'],hue=survey_data['CareerSatisfaction'], order=survey_data['YearsCoding'].dropna().sort_values().unique())
g.set_xlabel("Year Of Coding Experience")
g.set_xticklabels(g.get_xticklabels(),rotation=90)
g.legend(bbox_to_anchor=(1.1, 1.05))
plt.title("Year OF Coding Exp Vs Career Satisfaction")
plt.show()
plt.figure(figsize=(10,8))

temp = survey_data.WakeTime.value_counts().sort_values()
temp.plot.barh(color=sns.color_palette('husl',15))
plt.show()
# Employment status of Developer
temp_employment_counts = survey_data['Employment'].dropna().value_counts().sort_values()
fig1, ax1 = plt.subplots()
ax1.pie(temp_employment_counts, autopct='%1.1f%%', shadow=True)
ax1.axis('equal')
plt.legend(survey_data['Employment'].dropna().sort_values().unique(), bbox_to_anchor=(1.1, 1.05))
#ax1.legend(fontsize=14)
plt.show()
temp_df=survey_data.set_index('CareerSatisfaction').DevType.str.split(';',expand=True).stack().reset_index('CareerSatisfaction').dropna()
temp_df.columns=['CareerSatisfaction','Role']
temp_df.head()
pd.crosstab(temp_df['Role'], temp_df['CareerSatisfaction'],normalize='index').style.background_gradient(cmap = sns.light_palette("palegreen", as_cmap=True))
