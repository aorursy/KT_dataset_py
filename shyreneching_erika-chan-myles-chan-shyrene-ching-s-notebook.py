import pandas as pd
import os
os.listdir('../input')
reviews = pd.read_csv('../input/reviews.csv')
reviews.head()
reviews.head()
reviews.isnull().sum()

reviews = reviews.dropna(subset = ['year'])
reviews[['genre', 'label', 'author_type']] = df[['genre', 'label', 'author_type']].fillna("Unknown")

reviews.isnull().sum()
reviews['score'].value_counts().sort_index().plot.line()
reviews['score'].describe()
reviews['genre'].value_counts().sort_index().plot.bar()
reviews[reviews['genre'] != 'rock']['genre'].value_counts().mean()
downsampled = reviews[reviews['genre'] == 'rock'].sample(n=1606, random_state=42)
other = reviews[reviews['genre'] != 'rock']
reviews = pd.concat([other,downsampled])
reviews['genre'].value_counts().sort_index().plot.bar()
reviews['genre'].astype('category').cat.codes.corr(df['score'])
reviews.head()
recent = pd.read_sql_query("SELECT * From artists NATURAL JOIN content NATURAL JOIN genres NATURAL JOIN labels NATURAL JOIN reviews NATURAL JOIN years", cnx)
recent = recent[recent['year'] >= 2010]
recent.head()
recent.describe()
recent['score'].value_counts().sort_index().plot.line()
recent['score'].describe()
recent['genre'].value_counts().sort_index().plot.bar()
recent[recent['genre'] != 'rock']['genre'].value_counts().mean()
downsampled = recent[recent['genre'] == 'rock'].sample(n=648, random_state=42)
other = recent[recent['genre'] != 'rock']
recent = pd.concat([other,downsampled])
recent.head()
recent['genre'].value_counts().sort_index().plot.bar()
recent.isnull().sum()
recent[['genre', 'label', 'author_type']] = recent[['genre', 'label', 'author_type']].fillna("Unknown")
recent.isnull().sum()
recent['genre'].value_counts().sort_index().plot.bar()
recent['genre'].astype('category').cat.codes.corr(recent['score'])
recent['artist'].value_counts()
recent['artist'].astype('category').cat.codes.corr(recent['score'])
recent[recent['score'] > 7]['label'].value_counts().head()
recent[recent['score'] < 7]['label'].value_counts().head()
recent['label'].astype('category').cat.codes.corr(recent['score'])
