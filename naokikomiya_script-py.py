import gzip

import base64

import os

from pathlib import Path

from typing import Dict





# this is base64 encoded source code

file_data: Dict = {'working/_lgbm.py': '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', 'working/lgbm_wrapper.py': 'H4sIAO2FFV4C/4VSUUvDMBB+7684GKMtzLIJIgzigwi+qK8+iIR0vdVImoQkKyvifzdJ3VKHY/cQkt733X33XWcwn2e808o4ELz9cG3dAbMg2jrLso1g1sLT4/3zq2FaoylU/YkbV64z8NHgFijlkjtKC4ti+/s9RHhWnWpQAIEXJfFvRjPDOutTX/lYkveYryGvuWRmyBdH9EnkFrHxwNvVeUiPplY2lFt+Z0ehW+6ixgU4Q/fxHBbQs3D35zDR7oenzjAuvT5/rx6YYxZdkYjlH2zPBG9OsJPC/3sSwLFJMXpBJr6cne0QkUh9H3LUepETVQaOJW+JlQZ4v1gBmREDtU5pzWVLjdrJxpLr5eXW40Yo+kbkalWmrWiDDd8cNrOfLCFkvE3Js+qA3SdHZxFGx/+UQBFJd7CsbsqKWTdoLLh0CW/Q7YyMpOwHGAXN1PsCAAA=', 'working/dump_pickles.py': 'H4sIAO2FFV4C/4WSTUvDMBjH7/kUgTHSQu3uA/0CfoiRNWkXtqYhydxh7JDu4JiIuKO7iOILeBG8ePPDxM2v4dPWDcGB5Tkk/f+eP89LWrjdRiJXhba4MLuTEslwxNH+SiWjBkMohhBq4VOaZSP++b707nmzePhavW7u5t49KWoHvlxtFue+XG7XH94tkJowfAzeccZtMmFBiESKyaTQQyEzgmVhsZAYqC7C8DV4SqZwmHV2WC2BRzJgQgcghQ2shbRBSpKx1lzaHoj46ATXuSRE/8hVJ75883OIG+9efLnw7t67x+onhLv17nq7fvfucnu1hl58eYEYtbRnuDVQ5bQuglhNhSRdTOK4I6Qa244VlkqRdGolTswZiX5QbuxhEoTfYMYl47pnxv1cGCOKw/5/qNoCzRBKC40lzXmEq51UE94XHgvLcxOEzbxZCo0oFmtOWQ+yg4pvpjsRkFkoLmGE08psFjcPg0SwwD4JqxeRNjb1NmoxZuNcBSyNcBqibyW/DuhfAgAA', 'working/xgb_wrapper.py': 'H4sIAO2FFV4C/4WSTWvDMAyG7/4VhlKcQAjtoQwK3WEMdtquG4xh1MTtPBI7yGqXMPbfZydrPsq66uA40fMq0muzGZ/PmS4ri8Tr/dZaRxxc2DLGsgKc4y8Pd88IVaUwstsPlVG8ZtxHrnZcSm00SRk5Vex+v4cIr2lpc1XwDX+yRk0zFSCUzqe+RFdSH5VYc7HVBrBZF3avHelMJL3sLIQ6QiFLRegpL1SIFv/BnS6UIU8uLzMIJreldAQUmrlZfrNp1+ZQSrQHk/vGVwvWm7DT1M6fcEJZt2uT8COEvV+bkS85IWjj9d7g9P4RfP91NKjiAfTz6fwMHJXswU+g7L3wdnn2NerqJ1y0TxEnPOoqJZ1lIn5jfx9S+E8rikYndNGs6TxXsal9V/HQqdv0k8WD1RWqXGcnu+uxs0BwZlc9uBR0PjtMnJ4qBd3AzVpSdhd/w6NWd8sX6SpOwVFTqUgbGnhUdEDTitgPcIDVS0wDAAA=', 'working/predict.py': 'H4sIAO2FFV4C/61WTWvcMBC9768QhCC5uG6y0Etgc0hKcmkvLbSBUIQiax0RWxKS1psl5L93/CHbu/Z+tHTZg/X0ZubNaEboDJ2fz1KxRAWTikRXMwQ/WRhtPdJuVi/NOkULWCWZ8HydkqghLRFea/siVYaR0h5JVTEbD73ZEr/Bx/unQO22wR9/TqUlsB31RlYqT5aYr6wVylMgoI/XqPaBG9oRyjADtSrMBjGHlBnChqkUQPibtMaXVhfIveSCWZUUwlvJXSAzDoEY31DHtRU1/eygQa4zmmvXFq9mpsyzsP0FvvsdXgb89meP5tlTQdeWGSNs2P96f/PtVwP1xNfsaZf3cH8zonHmd2m3zI9ouR0F1Zl0XvLvIrOBXvPrjBZ1Mm0/PFBvoYditAkfXjgfI7d6KqRzUivqRWHAqLJNjNVcAKwy0p4ZlGIBVQjLrgaADnJvo+WiFPklRKLGipRW5LgDIW4Pgzkvk2opuae8JF2vdRHiPeJbJaHI4Kkv7rQOoE7IAHS/iuD9iIhwhFWNuqObFgHUCRGA7hcRvB8R0YxeZ7XE28OBcpk9e6jqFXqzeqVSsr1POp9k4vzQNbpIPkcJc35jBIFIUfTh8uIiRvOoG+xjCqCaWjv/1wKqI/of8aGQ/yagOp5TBLTnM4ezNGlSzd+dZYUgb7grJL6aHI9O9OQPhzKMraumPsUYUhgbA/jeSq8a6UTdWxN8KPiU7OHcHbfdVj0cl6C7vRare2h8HQ5HcN4X3MYd1OdiD9xFdnv+5jsDOD+x/4YK60v3xEYcSj+pD3eu9Uf8Y2VLWYoU/4YsyVTyY7dTnhKvKXclwT2ewBrH8MBIxevijuVOgIgZPEAoVdBDlKLFAmFKqzcMpbh5gjQPmtkfvZ/EaeEIAAA=', 'working/__init__.py': 'H4sIAO2FFV4C/wMAAAAAAAAAAAA=', 'working/feature.py': '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', 'working/lr_wrapper.py': 'H4sIAO2FFV4C/51UTWvcMBC9+1eIhGC7GJMNhcCCTyk9lVIaaAshCK08XtTIkhnJzi6l/72S13JsrxdKdLAlzZvvp7kmNzeRqBuNlqi2bo6EGaKaqEJdE/MigaHKpVDuT2tdgiQD+IveC2MF/w57BGOEVnOdBqFBzb1I7YPSo2WqZFg+ciYBo2syU6nBouAmgBnnLTJ+pIZrhCW4EQ34uAL623COAvBV44tznZfMsgD65PZLOe+C9OFHFEVcMmNm2f1E1jSAid79Bm7TbUTcKqEilAolLKWJAVkN9375Y34qVkG+ahfTTGL65Jei65NwTGsQj84qYXs/GbFID/33mJGO+b37Hif+PcDp+19eCSkVS/p9DUwlaRqNwKurK6K0Ja0BMjp2lxfinXcvSddguY/Te0uX4UxBFpkylcZ6AZ1V7pxhidGyAyxiuav2Js7IQ7HJbzPirJW6psYyC8X9Zs3eGNepcosiXCzAeVcCz5KnCcivJDZcupiWVUqzMyAY64Dvzy+dWHxOLwW7nrLnknubpeCBT4cJdXyjRtK8hzGXOz1ps/cfcKfuDBFRNzJ2znH6tM3I5vm/mzQ1OKYfsjxM4kewLaoeH/lJ4Yeff8iK1UApKQoSU1ozoSiNT1Vx46Fwk2Fgez9Min6ODDcSKe7R0NfTlFjwNsyOIYRf1NVDqIwcw8Y6LmTEtLta9BSgFurGGfGO8rcBGgxI6EDeOWXqU6CD82xy7w2Ge2eHd2NteZeMdVhEnV2IbPDaoFD2TbmK56OZyCFjiiOVt+QP6laVyRyajObXM0k/bG4d4e/Sv/Hge1Gap/ixxU50UMbPLr31vNcUc6spN10Sf6y09P5yd3JPTKgSDsVnJg2kgRL/AG0t7jIVBwAA', 'working/cv.py': 'H4sIAO2FFV4C/41UTYvbMBC9+1cM5BCrCJOUlsKCeyn00mNLKaSL0Npyq8aRjKRsE0r/e0eWY1uyQ9cQCJr33nzoaeSp08aBOp+6K3ALqssao09gj63gRhUnXYuWWdGKykmtQAb8Z2e4k40U9aePuq2zLKtabi18+Jrrp1+IJQ8Z4FeLBhiTSjrGclRphnP/dUjIRlRnRC0rx6rnHkchZP5teNcJQ+Ebw5RSUbje/jhh3UzumTOvYVkrrYMSDo9jyCPvBpEn64uYh8bYBjb9NztAuK20EStKI3o8OTaISGaVK2a7VjpbvqFgf56bphXlF3MWFAxXtT4x67gT5bs9GXUabfDX1gzviULujC+ZDqUTkAoERgTmEfmxKXr9PJ0YobCfzau/AiOVy5ut1/5zS/AXsADjtiSCYs4LNjOIFrLV1SHU8Zjirogbcq5CsOyFVGhlgZtL3SARJnJJ0WDbvlDal9EPKIzpSrJU2vsB1WOBwYW5J5I1RrBJ4dGqzofDZFI3t91V7527zon1x+NFLZNlZ7V4M7zkfhH+XW2TkSy8PvrdF8CetG6xoVvL8B52xVtScOuuncgxDUmIIfecTpbS/VPyskafsQdeVWfDq2s49+RwiZPEq/1uR+E1uZutZ97LlA5sFZw+4nRBqK6otKrwrSn/3qIwBX6RttyRu2tpyZ7CS7Y2tTCBxc0Pi6s3zjch0fCD5yLJQ68w31EDkIWFXfbb5H83OvqQnQRXoR7/L098u2xgM+NOGWO5lcQv2sBJLdElr1USe2SABeNFmrG/loYwwp2Nug2STh3OODEmtE7TWWT/AGduZvx+BwAA', 'working/data.py': 'H4sIAO2FFV4C/61Vy27TQBTd+ytGiqpxJOMQlpXMprBgg0DpAlRVo4nnOh0Sj62ZcdOq6oIdXwA/ANvyAXwO9D+4fmdsmgaEN4mvz7nnnDtjz4QcHXkyzTNtSWbaf7mM1xvwPG9SPo433BjyglvuZ8sPENvpsUfwEpAQxqSSljHfwCZp6uWVbwWJsGO4AhtvhT/tnsiE0G2m11KtKFGZJVKV6J7a0xN6g39uZy3cgWDv+EJI7SNk6pK1VNZPaFxoDcoyBJEnz0nVi/bQR2B9xE3GxTDfVtoLkuWgsEEYzqTKCzuz0nIlY4GTMmDrIZqZ1VyqsL6jAaF6SaeEG5K4kSsYhq6BYSWaNDb+VhGMPUAQUf9HbwVKgGamWKbSGJkdkHZE2eNEgy20qgcUVLaDMb9fr1xnMWBNrYaLtr8DOijxYb3eO/ov0yXXaxC4Q+JyYjdOErqgx+Rp4NZOsDYf1N5i7VlXunVdndFWhZ6jxKgWpjz3HSP9Ri7zDPmD0p/oHX8BVw9ESzku4jhdAs2D+cNxsOlukuq2ctGqDf13hP5ugHclQqGz3D+jb/DjBGoF+pUo99trnlb77oQvpaKu8S7AKe40sPQ8IPxKmmge4Eco3/AYolNdgOvs33UelelIE/KOVaF+fvze/N4tCn0pL0Hcf/ry68e3+6+fO3SDbYfbGmwJvV4f5Nql7IJL9ff71EcvYqMftF33vJOeLI8IhbNijEQRoYylyGCMNkcIfkjQVHW21G4Pbo60kh3uvO51ByENDvnabzpN22PsNyYxzmbrBgAA', 'working/cat_wrapper.py': 'H4sIAO2FFV4C/21STWvDMAy9+1cYSnECWemuhe6wwk5jlB22o1ESZ3g4lrGVrmHsv88Oy9eoDsKSnh7vCW/4dssajy2vgErEQFy3Dj3xE9Bjqm9Pz4iGMVYZCCFB3z04p3yG5aeqKD8wHqNWDZdSW01SZkGZ5q+fIpW7Fmtl+JG/oFXriQMPbYij76mfQhgMQTadrUijFQcunvEj9USxxtmulYNg6bGzdUTe7/cT5IdN+hpNg7SCk5fXIfcFv0B6x9wvJJMHbaWLzqOudIBsXskn1AWMrleoBRm77X+8dbbwnt+A7pLaWUY+23Be1boarVwXqmsgGJVcZ9K0ENsL7pFidci0XYzs8eSSeqeO4hW+ntC3nYE3MGJm3fyH8rsHLk7pl4iCi7PHEkptNPWpXLNMJF5R5+3AxH4Bg/uZKqACAAA=', 'setup.py': 'H4sIAO2FFV4C/0srys9VKE4tKS0oyc/PKVbIzC3ILyqBiHBxgSkNLgUgyEvMTbVVL88vys7MS1fXAYsVJCZnJ6anFttGwyVidbg0uQD/dwGtVQAAAA=='}





for path, encoded in file_data.items():

    print(path)

    path = Path(path)

    path.parent.mkdir(exist_ok=True)

    path.write_bytes(gzip.decompress(base64.b64decode(encoded)))





def run(command):

    os.system('export PYTHONPATH=${PYTHONPATH}:/kaggle/working && ' + command)





run('python setup.py develop --install-dir /kaggle/working')

run('python working/predict.py')
