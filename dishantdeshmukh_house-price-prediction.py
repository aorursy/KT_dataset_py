import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sn
train = pd.read_csv('../input/house-prices-advanced-regression-techniques/train.csv')
test = pd.read_csv('../input/house-prices-advanced-regression-techniques/test.csv')
pd.set_option('display.max_rows', 500)
pd.set_option('display.max_columns', 500)
train.head()
test.head()
train.columns
test.columns
train.isnull().sum()
test.isnull().sum()
train = train.drop('Alley',1)
train = train.drop('FireplaceQu',1)
train = train.drop('PoolQC',1)
train = train.drop('Fence',1)
train = train.drop('MiscFeature',1)
# train = train.drop('Condition1',1)
# test = test.drop('Condition1',1)
train = train.drop('Condition2',1)
test = test.drop('Condition2',1)
# train = train.drop('BldgType',1)
# test = test.drop('BldgType',1)
# train = train.drop('RoofStyle',1)
# test = test.drop('RoofStyle',1)
# train = train.drop('ExterQual',1)
# test = test.drop('ExterQual',1)
# train = train.drop('ExterCond',1)
# test = test.drop('ExterCond',1)
# train = train.drop('BsmtQual',1)
# test = test.drop('BsmtQual',1)
# train = train.drop('BsmtCond',1)
# test = test.drop('BsmtCond',1)
# train = train.drop('BsmtExposure',1)
# test = test.drop('BsmtExposure',1)
# train = train.drop('BsmtFinType1',1)
# test = test.drop('BsmtFinType1',1)
# train = train.drop('BsmtFinType2',1)
# test = test.drop('BsmtFinType2',1)
# train = train.drop('HeatingQC',1)
# test = test.drop('HeatingQC',1)
# train = train.drop('CentralAir',1)
# test = test.drop('CentralAir',1)
train = train.drop('Electrical',1)
test = test.drop('Electrical',1)
# train = train.drop('KitchenQual',1)
# test = test.drop('KitchenQual',1)
# train = train.drop('Functional',1)
# test = test.drop('Functional',1)
train = train.drop('HouseStyle',1)
test = test.drop('HouseStyle',1)
train = train.drop('Exterior1st',1)
test = test.drop('Exterior1st',1)
train = train.drop('Exterior2nd',1)
test = test.drop('Exterior2nd',1)
train = train.drop('GarageQual',1)
test = test.drop('GarageQual',1)
train = train.drop('Street',1)
train = train.drop('LandContour',1)
train = train.drop('Utilities',1)
train = train.drop('LandSlope',1)
train = train.drop('RoofMatl',1)
train = train.drop('Heating',1)
train = train.drop('LowQualFinSF',1)
test = test.drop('Alley',1)
test = test.drop('FireplaceQu',1)
test = test.drop('PoolQC',1)
test = test.drop('Fence',1)
test = test.drop('MiscFeature',1)
test = test.drop('Street',1)
test = test.drop('LandContour',1)
test = test.drop('Utilities',1)
test = test.drop('LandSlope',1)
test = test.drop('RoofMatl',1)
test = test.drop('Heating',1)
test = test.drop('LowQualFinSF',1)
train.info()
train.describe()
train['LotFrontage'].fillna(train['LotFrontage'].mean(),inplace=True)
train['MasVnrArea'].fillna(train['MasVnrArea'].mode()[0],inplace=True)
train['GarageYrBlt'].fillna(train['GarageYrBlt'].mean(),inplace=True)
train['MasVnrType'].fillna(train['MasVnrType'].mode()[0],inplace=True)
train['GarageType'].fillna(train['GarageType'].mode()[0],inplace=True)
train['GarageFinish'].fillna(train['GarageFinish'].mode()[0],inplace=True)
train['GarageCond'].fillna(train['GarageCond'].mode()[0],inplace=True)
test.info()
test.describe()
test['LotFrontage'].fillna(test['LotFrontage'].mean(),inplace=True)
test['MasVnrArea'].fillna(test['MasVnrArea'].mode()[0],inplace=True)
test['BsmtFinSF1'].fillna(test['BsmtFinSF1'].mode()[0],inplace=True)
test['BsmtFinSF2'].fillna(test['BsmtFinSF2'].mode()[0],inplace=True)
test['BsmtUnfSF'].fillna(test['BsmtUnfSF'].mode()[0],inplace=True)
test['TotalBsmtSF'].fillna(test['TotalBsmtSF'].mode()[0],inplace=True)
test['BsmtHalfBath'].fillna(test['BsmtHalfBath'].mode()[0],inplace=True)
test['BsmtFullBath'].fillna(test['BsmtFullBath'].mode()[0],inplace=True)
test['GarageYrBlt'].fillna(test['GarageYrBlt'].mean(),inplace=True)
test['GarageCars'].fillna(test['GarageCars'].mode()[0],inplace=True)
test['GarageArea'].fillna(test['GarageArea'].mode()[0],inplace=True)
test['MSZoning'].fillna(test['MSZoning'].mode()[0],inplace=True)
test['MasVnrType'].fillna(test['MasVnrType'].mode()[0],inplace=True)
test['GarageType'].fillna(test['GarageType'].mode()[0],inplace=True)
test['GarageFinish'].fillna(test['GarageFinish'].mode()[0],inplace=True)
test['GarageCond'].fillna(test['GarageCond'].mode()[0],inplace=True)
test['SaleType'].fillna(test['SaleType'].mode()[0],inplace=True)
test.isnull().sum()
train = train.drop('Id',1)
test2 = test.drop('Id',1)
X = train.drop('SalePrice',1)
y = train['SalePrice']
X = pd.get_dummies(X)
test2 = pd.get_dummies(test2)
print(X.shape , test2.shape)
from sklearn.linear_model import LinearRegression
lreg = LinearRegression()
lreg.fit(X,y)
pred_a = lreg.predict(test2)
submission = pd.DataFrame({
        "Id": test["Id"],
        "SalePrice": pred_a
    })

submission.to_csv('lreg.csv', index=False)
