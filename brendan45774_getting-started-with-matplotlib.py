import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

year = [1950, 1970, 1990, 2010]
pop = [2.519, 3.692, 5.263, 6.972]
plt.plot(year, pop)
plt.show()
year = [1950, 1970, 1990, 2010]
pop = [2.519, 3.692, 5.263, 6.972]
plt.plot(year, pop)

plt.xlabel('Year')
plt.ylabel('Population')
plt.title('World Population Projections')

plt.show()
year = [1950, 1970, 1990, 2010]
pop = [2.519, 3.692, 5.263, 6.972]
plt.plot(year, pop)

plt.xlabel('Year')
plt.ylabel('Population')
plt.title('World Population Projections')
plt.yticks([0, 2, 4, 6, 8, 10],           
           ['0', '2B', '4B', '6B', '8B', '10B'])

plt.show()
# Scatter plot
plt.plot(year, pop)

# Previous customizations
plt.xscale('log') 
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')

# Definition of tick_val and tick_lab
tick_val = [400, 21000, 50590]
tick_lab = ['15k', '10k', '100k']

# Adapt the ticks on the x-axis
plt.xticks(tick_val, tick_lab)

# After customizing, display the plot
plt.show()
year = [1950, 1970, 1990, 2010]
pop = [2.519, 3.692, 5.263, 6.972]
plt.plot(year, pop)

# Add more data
year = [1800, 1850, 1900] + year
pop = [1.0, 1.262, 1.650] + pop

plt.xlabel('Year')
plt.ylabel('Population')
plt.title('World Population Projections')
plt.yticks([0, 2, 4, 6, 8, 10],           
           ['0', '2B', '4B', '6B', '8B', '10B'])

plt.show()
year = [1950, 1970, 1990, 2010]
pop = [2.519, 3.692, 5.263, 6.972]
plt.scatter(year, pop)
plt.show()
year = [1950, 1970, 1990, 2010]
plt.hist(year, bins=10)
plt.show()
# Build histogram with 5 bins
plt.hist(year, bins = 5)

# Show and clean up plot
plt.show()
plt.clf()

# Build histogram with 20 bins
plt.hist(year, bins = 20)

# Show and clean up again
plt.show()
plt.clf()
life_exp = [43.828,76.40023,72.30001,42.7031,75.30002,81.235,79.8029,75.60035,64.062,79.44001,56.728,65.5054,74.852,50.70028,72.30009,73.0005,52.295,49.5008,59.723,50.43,80.653,44.74100000000001,50.6051,78.5503,72.90061,72.889,65.1502,46.462,55.322,78.70082,48.3208,75.7048,78.20073,76.4806,78.332,54.70091,72.2035,74.994,71.33800000000002,71.878,51.57899999999999,58.004,52.90407,79.3013,80.6057,56.700035,59.448,79.406,60.020002,79.4803,70.2059,56.007,46.38800000000001,60.916,70.19800000000001,82.208,73.33800000000002,81.757,64.69800000000001,70.65,70.9064,59.545,78.00885,80.7045,80.546,72.5067,82.6003,72.5305,54.1001,67.2097,78.6203,77.58800000000002,71.993,42.592,45.60078,73.952,59.44300000000001,48.3003,74.2041,54.4607,64.164,72.8001,76.10950,66.803,74.5043,71.160004,42.082,62.069,52.90600000000001, 63.785,79.76002,80.2004,72.8909,56.867,46.8509,80.1096,75.604,65.483,75.53699999999998,71.752,71.40000021,71.688,75.563,78.098,78.74600000000002,76.4402,72.40706,46.242,65.5208,72.7077,63.000062,74.002,42.56800000000001,79.9072,74.6063,77.926,48.1059,49.0339,80.941,72.300096,58.50056,39.6013,80.884,81.70100000000002,74.143,78.4,52.517,70.6000016,58.420,69.819,73.023,71.700077,51.542,79.4025,78.242,76.300084,73.747,74.240009,73.422,62.698,42.38399999999999,43.487]
gdp_cap = [974.5803384,5937.029525999998,6223.367465,4797.231267,12779.37964,34435.367439999995,36126.4927,29796.04834,1391.253792,33692.60508,1441.284873,3822.137084,7446.298803,12569.85177,9065.800825,10680.79282,1217.032994,430.0706916,1713.778686,2042.09524,36319.23501,706.016537,1704.063724,13171.63885,4959.114854,7006.580419,986.1478792,277.5518587,3632.557798,9645.06142,1544.750112,14619.222719999998,8948.102923,22833.30851,35278.41874,2082.4815670000007,6025.3747520000015,6873.262326000001,5581.180998,5728.353514,12154.08975,641.3695236000002,690.8055759,33207.0844,30470.0167,13206.48452,752.7497265,32170.37442,1327.60891,27538.41188,5186.050003,942.6542111,579.2317429999998,1201.637154,3548.3308460000007,39724.97867,18008.94444,36180.78919,2452.210407,3540.651564,11605.71449,4471.061906,40675.99635,25523.2771,28569.7197,7320.8802620000015,31656.06806,4519.461171,1463.249282,1593.06548,23348.139730000006,47306.98978,10461.05868,1569.331442,414.5073415,12057.49928,1044.770126,759.3499101,12451.6558,1042.581557,1803.151496,10956.99112,11977.57496,3095.7722710000007,9253.896111,3820.17523,823.6856205,944.0,4811.060429,1091.359778,36797.93332,25185.00911,2749.320965,619.6768923999998,2013.977305,49357.19017,22316.19287,2605.94758,9809.185636,4172.838464,7408.905561,3190.481016,15389.924680000002,20509.64777,19328.70901,7670.122558,10808.47561,863.0884639000002,1598.435089,21654.83194,1712.472136,9786.534714,862.5407561000002,47143.17964,18678.31435,25768.25759,926.1410683,9269.657808,28821.0637,3970.095407,2602.394995,4513.480643,33859.74835,37506.41907,4184.548089, 28718.27684,1107.482182,7458.396326999998,882.9699437999999,18008.50924,7092.923025,8458.276384,1056.380121,33203.26128,42951.65309,10611.46299,11415.80569,2441.576404,3025.349798,2280.769906,1271.211593,469.70929810000007]
pop = [974.5803384,5937.029525999998,6223.367465,4797.231267,12779.37964,34435.367439999995,36126.4927,29796.04834,1391.253792,33692.60508,1441.284873,3822.137084,7446.298803,12569.85177,9065.800825,10680.79282,1217.032994,430.0706916,1713.778686,2042.09524,36319.23501,706.016537,1704.063724,13171.63885,4959.114854,7006.580419,986.1478792,277.5518587,3632.557798,9645.06142,1544.750112,14619.222719999998,8948.102923,22833.30851,35278.41874,2082.4815670000007,6025.3747520000015,6873.262326000001,5581.180998,5728.353514,12154.08975,641.3695236000002,690.8055759,33207.0844,30470.0167,13206.48452,752.7497265,32170.37442,1327.60891,27538.41188,5186.050003,942.6542111,579.2317429999998,1201.637154,3548.3308460000007,39724.97867,18008.94444,2452.210407,3540.651564,11605.71449,4471.061906,40675.99635,25523.2771,28569.7197,7320.8802620000015,31656.06806,4519.461171,1463.249282,1593.06548,23348.139730000006,47306.98978,10461.05868,1569.331442,414.5073415,12057.49928,1044.770126,759.3499101,12451.6558,1042.581557,1803.151496,10956.99112,11977.57496,3095.7722710000007,9253.896111,3820.17523,823.6856205,944.0,4811.060429,1091.359778,36797.93332,25185.00911,2749.320965,619.6768923999998,2013.977305,49357.19017,22316.19287,2605.94758,9809.185636,4172.838464,7408.905561,3190.481016,15389.924680000002,20509.64777,19328.70901,7670.122558,10808.47561,863.0884639000002,1598.435089,21654.83194,1712.472136,9786.534714,862.5407561000002,47143.17964,18678.31435,25768.25759,926.1410683,9269.657808,28821.0637,3970.095407,2602.394995,4513.480643,33859.74835,37506.41907,4184.548089,28718.27684,1107.482182,7458.396326999998,882.9699437999999,18008.50924,7092.923025,8458.276384,1056.380121,33203.26128,42951.65309,10611.46299,11415.80569,2441.576404,3025.349798,2280.769906,1271.211593,469.70929810000007]
life_exp = [33.333216,
 12.420476,
 40.301927,
 20.434176,
 8.199783,
 0.708573,
 150.448339,
 10.392226,
 8.078314,
 9.119152,
 4.552198,
 1.639131,
 190.010647,
 7.322858,
 14.326203,
 8.390505,
 14.131858,
 17.696293,
 33.390141,
 4.369038,
 10.238807,
 16.284741,
 1318.683096,
 44.22755,
 0.71096,
 64.606759,
 3.80061,
 4.133884,
 18.013409,
 4.493312,
 11.416987,
 10.228744,
 5.46812,
 0.496374,
 9.319622,
 13.75568,
 80.264543,
 6.939688,
 0.551201,
 4.906585,
 76.511887,
 5.23846,
 61.083916,
 1.454867,
 1.688359,
 82.400996,
 22.873338,
 10.70629,
 12.572928,
 9.947814,
 1.472041,
 8.502814,
 7.483763,
 6.980412,
 9.956108,
 0.301931,
 1110.396331,
 223.547,
 69.45357,
 27.499638,
 4.109086,
 6.426679,
 58.147733,
 2.780132,
 127.467972,
 6.053193,
 35.610177,
 23.301725,
 49.04479,
 2.505559,
 3.921278,
 2.012649,
 3.193942,
 6.036914,
 19.167654,
 13.327079,
 24.821286,
 12.031795,
 3.270065,
 1.250882,
 108.700891,
 2.874127,
 0.684736,
 33.757175,
 19.951656,
 47.76198,
 2.05508,
 28.90179,
 16.570613,
 4.115771,
 5.675356,
 12.894865,
 135.031164,
 4.627926,
 3.204897,
 169.270617,
 3.242173,
 6.667147,
 28.674757,
 91.077287,
 38.518241,
 10.642836,
 3.942491,
 0.798094,
 22.276056,
 8.860588,
 0.199579,
 27.601038,
 12.267493,
 10.150265,
 6.144562,
 4.553009,
 5.447502,
 2.009245,
 9.118773,
 43.997828,
 40.448191,
 20.378239,
 42.292929,
 1.133066,
 9.031088,
 7.554661,
 19.314747,
 23.174294,
 38.13964,
 65.068149,
 5.701579,
 1.056608,
 10.276158,
 71.158647,
 29.170398,
 60.776238,
 301.139947,
 3.447496,
 26.084662]
gdp_cap = [33.333216,
 12.420476,
 40.301927,
 20.434176,
 8.199783,
 0.708573,
 150.448339,
 10.392226,
 8.078314,
 9.119152,
 4.552198,
 1.639131,
 190.010647,
 7.322858,
 14.326203,
 8.390505,
 14.131858,
 17.696293,
 33.390141,
 4.369038,
 10.238807,
 16.284741,
 1318.683096,
 44.22755,
 0.71096,
 64.606759,
 3.80061,
 4.133884,
 18.013409,
 4.493312,
 11.416987,
 10.228744,
 5.46812,
 0.496374,
 9.319622,
 13.75568,
 80.264543,
 6.939688,
 0.551201,
 4.906585,
 76.511887,
 5.23846,
 61.083916,
 1.454867,
 1.688359,
 82.400996,
 22.873338,
 10.70629,
 12.572928,
 9.947814,
 1.472041,
 8.502814,
 7.483763,
 6.980412,
 9.956108,
 0.301931,
 1110.396331,
 223.547,
 69.45357,
 27.499638,
 4.109086,
 6.426679,
 58.147733,
 2.780132,
 127.467972,
 6.053193,
 35.610177,
 23.301725,
 49.04479,
 2.505559,
 3.921278,
 2.012649,
 3.193942,
 6.036914,
 19.167654,
 13.327079,
 24.821286,
 12.031795,
 3.270065,
 1.250882,
 108.700891,
 2.874127,
 0.684736,
 33.757175,
 19.951656,
 47.76198,
 2.05508,
 28.90179,
 16.570613,
 4.115771,
 5.675356,
 12.894865,
 135.031164,
 4.627926,
 3.204897,
 169.270617,
 3.242173,
 6.667147,
 28.674757,
 91.077287,
 38.518241,
 10.642836,
 3.942491,
 0.798094,
 22.276056,
 8.860588,
 0.199579,
 27.601038,
 12.267493,
 10.150265,
 6.144562,
 4.553009,
 5.447502,
 2.009245,
 9.118773,
 43.997828,
 40.448191,
 20.378239,
 42.292929,
 1.133066,
 9.031088,
 7.554661,
 19.314747,
 23.174294,
 38.13964,
 65.068149,
 5.701579,
 1.056608,
 10.276158,
 71.158647,
 29.170398,
 60.776238,
 301.139947,
 3.447496,
 26.084662]
pop = [33.333216,
 12.420476,
 40.301927,
 20.434176,
 8.199783,
 0.708573,
 150.448339,
 10.392226,
 8.078314,
 9.119152,
 4.552198,
 1.639131,
 190.010647,
 7.322858,
 14.326203,
 8.390505,
 14.131858,
 17.696293,
 33.390141,
 4.369038,
 10.238807,
 16.284741,
 1318.683096,
 44.22755,
 0.71096,
 64.606759,
 3.80061,
 4.133884,
 18.013409,
 4.493312,
 11.416987,
 10.228744,
 5.46812,
 0.496374,
 9.319622,
 13.75568,
 80.264543,
 6.939688,
 0.551201,
 4.906585,
 76.511887,
 5.23846,
 61.083916,
 1.454867,
 1.688359,
 82.400996,
 22.873338,
 10.70629,
 12.572928,
 9.947814,
 1.472041,
 8.502814,
 7.483763,
 6.980412,
 9.956108,
 0.301931,
 1110.396331,
 223.547,
 69.45357,
 27.499638,
 4.109086,
 6.426679,
 58.147733,
 2.780132,
 127.467972,
 6.053193,
 35.610177,
 23.301725,
 49.04479,
 2.505559,
 3.921278,
 2.012649,
 3.193942,
 6.036914,
 19.167654,
 13.327079,
 24.821286,
 12.031795,
 3.270065,
 1.250882,
 108.700891,
 2.874127,
 0.684736,
 33.757175,
 19.951656,
 47.76198,
 2.05508,
 28.90179,
 16.570613,
 4.115771,
 5.675356,
 12.894865,
 135.031164,
 4.627926,
 3.204897,
 169.270617,
 3.242173,
 6.667147,
 28.674757,
 91.077287,
 38.518241,
 10.642836,
 3.942491,
 0.798094,
 22.276056,
 8.860588,
 0.199579,
 27.601038,
 12.267493,
 10.150265,
 6.144562,
 4.553009,
 5.447502,
 2.009245,
 9.118773,
 43.997828,
 40.448191,
 20.378239,
 42.292929,
 1.133066,
 9.031088,
 7.554661,
 19.314747,
 23.174294,
 38.13964,
 65.068149,
 5.701579,
 1.056608,
 10.276158,
 71.158647,
 29.170398,
 60.776238,
 301.139947,
 3.447496,
 26.084662]
# Store pop as a numpy array: np_pop
np_pop = np.array(pop)

# Double np_pop
np_pop = np_pop * 2

# Update: set s argument to np_pop
plt.scatter(gdp_cap, life_exp, np_pop)

# Previous customizations
plt.xscale('log') 
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')
plt.xticks([1000, 10000, 100000],['1k', '10k', '100k'])

# Display the plot
plt.show()
col = ['red','orange','green','blue','yellow','black','green','red','red','green','blue','yellow','green','blue','yellow','green','blue','blue','red','blue','yellow','blue','blue','yellow','red','yellow','blue','blue','blue','yellow','blue','green','yellow' 'green','green','blue','yellow','yellow','blue','yellow','blue','blue','blue','green','blue','green','blue','green','yellow','blue','blue','yellow','yellow','red','green','green','red','red','red','red','green','red','green','yellow','red','red','blue','red','red','red','blue','blue','blue','blue','red','blue','blue','blue','yellow','red','green','blue','blue','red','blue','red','green','black','yellow','blue','blue','green','red','red','yellow','yellow','yellow','red','green','green','yellow','blue','green','blue','blue','red','blue','green','blue','red','green','green','blue','blue','green','red','blue','blue','green','green','red','red','blue','red','blue','yellow','blue','green','blue','green','yellow','yellow','yellow','red','red','blue']
# Specify c and alpha inside plt.scatter()
plt.scatter(x = gdp_cap, y = life_exp,c = col, alpha = 0.8, s = np.array(pop) * 2)

# Previous customizations
plt.xscale('log') 
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')
plt.xticks([1000,10000,100000], ['1k','10k','100k'])

# Show the plot
plt.show()
# Scatter plot
plt.scatter(x = gdp_cap, y = life_exp, s = np.array(pop) * 2, c = col, alpha = 0.8)

# Previous customizations
plt.xscale('log') 
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')
plt.xticks([1000,10000,100000], ['1k','10k','100k'])

# Additional customizations
plt.text(150, 1080, 'India')
plt.text(3700, 1280, 'China')

# Add grid() call
plt.grid(True)

# Show the plot
plt.show()
